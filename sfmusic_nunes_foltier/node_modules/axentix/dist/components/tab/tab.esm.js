var ct = Object.defineProperty;
var dt = (i, e, t) => e in i ? ct(i, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : i[e] = t;
var q = (i, e, t) => (dt(i, typeof e != "symbol" ? e + "" : e, t), t), G = (i, e, t) => {
  if (!e.has(i))
    throw TypeError("Cannot " + t);
};
var s = (i, e, t) => (G(i, e, "read from private field"), t ? t.call(i) : e.get(i)), l = (i, e, t) => {
  if (e.has(i))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(i) : e.set(i, t);
}, o = (i, e, t, n) => (G(i, e, "write to private field"), n ? n.call(i, t) : e.set(i, t), t);
var c = (i, e, t) => (G(i, e, "access private method"), t);
const M = [], T = {
  components: [],
  plugins: [],
  prefix: "ax",
  mode: ""
}, K = (i) => `--${T.prefix}-${i}`, S = (i) => T.components.find((e) => e.name === i).class, Q = () => {
  const i = T.components.filter((t) => t.dataDetection), e = T.plugins.filter((t) => t.dataDetection);
  return [...i, ...e].map((t) => t.name);
}, ut = (i, e) => {
  if (!i.name || !i.class) {
    console.error(`[Axentix] Error registering ${e} : Missing required parameters.`);
    return;
  }
  if (T[e].some((t) => t.name === i.name)) {
    console.error(`[Axentix] Error registering ${e} : Already exist.`);
    return;
  }
  i.autoInit && (i.autoInit.selector = i.autoInit.selector += ":not(.no-axentix-init)"), T[e].push(i);
}, ft = (i) => {
  ut(i, "components");
}, pt = (i) => i.replace(/[\w]([A-Z])/g, (e) => e[0] + "-" + e[1]).toLowerCase(), xt = (i, e = "") => {
  const t = pt(i);
  return e ? e + "-" + t : t;
}, mt = (i, e, t, n, r = "") => {
  const a = e[0].toUpperCase() + e.slice(1).toLowerCase();
  Q().includes(a) && t !== "Collapsible" && a !== "Sidenav" && (i[e] = S(a).getDefaultOptions());
  const x = r ? r + "-" + e : e, v = X(i[e], t, n, x);
  if (!(Object.keys(v).length === 0 && i.constructor === Object))
    return v;
}, X = (i, e, t, n = "") => Object.keys(i).reduce((r, a) => {
  if (typeof i[a] == "object" && i[a] !== null) {
    const x = mt(i, a, e, t, n);
    x && (r[a] = x);
  } else if (i[a] !== null) {
    const x = "data-" + e.toLowerCase() + "-" + xt(a, n);
    if (t.hasAttribute(x)) {
      const v = t.getAttribute(x);
      r[a] = typeof i[a] == "number" ? Number(v) : v, typeof i[a] == "boolean" && (r[a] = v === "true");
    }
  }
  return r;
}, {}), vt = (i, e) => {
  const t = Object.assign({}, S(i).getDefaultOptions());
  return X(t, i, e);
}, bt = () => {
  document.querySelectorAll("[data-ax]").forEach((e) => {
    let t = e.dataset.ax;
    if (t = t[0].toUpperCase() + t.slice(1).toLowerCase(), !Q().includes(t)) {
      console.error(
        `[Axentix] Error: ${t} component doesn't exist. 
 Did you forget to register him ?`,
        e
      );
      return;
    }
    try {
      const n = S(t);
      new n(`#${e.id}`);
    } catch (n) {
      console.error("[Axentix] Data: Unable to load " + t, n);
    }
  });
}, gt = () => {
  try {
    new Axentix.Axentix("all");
  } catch (i) {
    console.error("[Axentix] Unable to auto init.", i);
  }
};
document.addEventListener("DOMContentLoaded", () => {
  document.documentElement.dataset.axentix && gt(), bt();
});
const Y = (...i) => i.reduce((e, t) => {
  for (let n in t)
    e[n] = typeof t[n] == "object" && t[n] !== null ? Y(e[n], t[n]) : t[n];
  return e;
}, {}), Lt = (i, e, t) => Y(S(i).getDefaultOptions(), vt(i, t), e), yt = (i, e = document.createElement("div")) => (i[0].parentElement.insertBefore(e, i[0]), i.forEach((n) => e.appendChild(n)), e), g = (i, e, t) => {
  const n = new CustomEvent("ax." + e, {
    detail: t || {},
    bubbles: !0
  });
  i.dispatchEvent(n);
}, Et = (i) => {
  const e = M.find((t) => t.type !== "Toast" && "#" + t.instance.el.id === i);
  return e ? e.instance : !1;
};
class At {
  constructor() {
    q(this, "el");
  }
  removeListeners() {
  }
  setupListeners() {
  }
  setup() {
  }
  preventDbInstance(e) {
    if (e && Et(e))
      throw new Error(`Instance already exist on ${e}`);
  }
  sync() {
    g(this.el, "component.sync"), this.removeListeners(), this.setupListeners();
  }
  reset() {
    g(this.el, "component.reset"), this.removeListeners(), this.setup();
  }
  destroy() {
    g(this.el, "component.destroy"), this.removeListeners();
    const e = M.findIndex((t) => t.instance.el.id === this.el.id);
    M.splice(e, 1);
  }
}
const wt = {
  animationDuration: 300,
  animationType: "none",
  disableActiveBar: !1,
  caroulix: {
    animationDuration: 300,
    backToOpposite: !1,
    enableTouch: !1,
    autoplay: {
      enabled: !1
    }
  }
};
var u, h, f, d, C, D, L, y, E, b, A, m, w, O, I, p, $, j, z, tt, P, et, W, it, B, st, k, H, R, J, N, nt, U, rt, F, ot, V, at, Z, lt;
class _ extends At {
  constructor(t, n) {
    super();
    l(this, $);
    l(this, z);
    l(this, P);
    l(this, W);
    l(this, B);
    l(this, k);
    l(this, R);
    l(this, N);
    l(this, U);
    l(this, F);
    l(this, V);
    l(this, Z);
    q(this, "options");
    l(this, u, void 0);
    l(this, h, void 0);
    l(this, f, void 0);
    l(this, d, 0);
    l(this, C, void 0);
    l(this, D, void 0);
    l(this, L, void 0);
    l(this, y, void 0);
    l(this, E, void 0);
    l(this, b, void 0);
    l(this, A, void 0);
    l(this, m, void 0);
    l(this, w, void 0);
    l(this, O, !1);
    l(this, I, void 0);
    l(this, p, !1);
    try {
      this.preventDbInstance(t), M.push({ type: "Tab", instance: this }), this.el = document.querySelector(t), this.options = Lt("Tab", n, this.el), this.setup();
    } catch (r) {
      console.error("[Axentix] Tab init error", r);
    }
  }
  setup() {
    g(this.el, "tab.setup"), ["none", "slide"].includes(this.options.animationType) || (this.options.animationType = "none"), o(this, p, !1), o(this, u, this.el.querySelector(".tab-arrow")), o(this, h, this.el.querySelectorAll(".tab-menu .tab-link")), o(this, f, this.el.querySelector(".tab-menu")), o(this, d, 0), o(this, m, c(this, P, et).call(this)), s(this, u) && (c(this, R, J).call(this), o(this, C, this.el.querySelector(".tab-arrow .tab-prev")), o(this, D, this.el.querySelector(".tab-arrow .tab-next"))), this.setupListeners(), s(this, f).style.transitionDuration = this.options.animationDuration + "ms", this.options.animationType === "slide" ? c(this, B, st).call(this) : this.updateActiveElement();
  }
  setupListeners() {
    s(this, h).forEach((t) => {
      t.listenerRef = c(this, F, ot).bind(this, t), t.addEventListener("click", t.listenerRef);
    }), o(this, A, c(this, $, j).bind(this)), window.addEventListener("resize", s(this, A)), s(this, u) && (o(this, E, c(this, R, J).bind(this)), window.addEventListener("resize", s(this, E)), o(this, L, c(this, N, nt).bind(this)), o(this, y, c(this, U, rt).bind(this)), s(this, C).addEventListener("click", s(this, L)), s(this, D).addEventListener("click", s(this, y)));
  }
  removeListeners() {
    s(this, h).forEach((t) => {
      t.removeEventListener("click", t.listenerRef), t.listenerRef = void 0;
    }), window.removeEventListener("resize", s(this, A)), o(this, A, void 0), s(this, u) && (window.removeEventListener("resize", s(this, E)), o(this, E, void 0), s(this, C).removeEventListener("click", s(this, L)), s(this, D).removeEventListener("click", s(this, y)), o(this, L, void 0), o(this, y, void 0)), s(this, b) && (this.el.removeEventListener("ax.caroulix.slide", s(this, b)), o(this, b, void 0));
  }
  select(t) {
    if (s(this, p))
      return;
    o(this, p, !0);
    const n = this.el.querySelector('.tab-menu a[href="#' + t + '"]');
    if (o(this, d, Array.from(s(this, h)).findIndex((r) => r.children[0] === n)), g(n, "tab.select", { currentIndex: s(this, d) }), c(this, k, H).call(this, n.parentElement), s(this, O)) {
      s(this, m).forEach((a) => a.id === t ? a.classList.add("active") : "");
      const r = S("Caroulix");
      o(this, I, new r(
        "#" + s(this, w).id,
        this.options.caroulix,
        this.el,
        !0
      )), o(this, b, c(this, z, tt).bind(this)), this.el.addEventListener("ax.caroulix.slide", s(this, b)), o(this, O, !1), o(this, p, !1);
      return;
    }
    if (this.options.animationType === "slide") {
      const r = s(this, m).findIndex((a) => a.id === t);
      s(this, I).goTo(r), setTimeout(() => {
        o(this, p, !1);
      }, this.options.animationDuration);
    } else
      c(this, W, it).call(this), s(this, m).forEach((r) => {
        r.id === t && (r.style.display = "block");
      }), o(this, p, !1);
  }
  updateActiveElement() {
    let t;
    s(this, h).forEach((r, a) => {
      r.classList.contains("active") && (t = r, o(this, d, a));
    }), t || (t = s(this, h).item(0), o(this, d, 0));
    const n = t.children[0].getAttribute("href");
    this.select(n.split("#")[1]);
  }
  prev(t = 1) {
    if (s(this, p))
      return;
    const n = c(this, V, at).call(this, t);
    o(this, d, n), g(this.el, "tab.prev", { step: t });
    const r = s(this, h)[n].children[0].getAttribute("href");
    this.select(r.split("#")[1]);
  }
  next(t = 1) {
    if (s(this, p))
      return;
    const n = c(this, Z, lt).call(this, t);
    o(this, d, n), g(this.el, "tab.next", { step: t });
    const r = s(this, h)[n].children[0].getAttribute("href");
    this.select(r.split("#")[1]);
  }
}
u = new WeakMap(), h = new WeakMap(), f = new WeakMap(), d = new WeakMap(), C = new WeakMap(), D = new WeakMap(), L = new WeakMap(), y = new WeakMap(), E = new WeakMap(), b = new WeakMap(), A = new WeakMap(), m = new WeakMap(), w = new WeakMap(), O = new WeakMap(), I = new WeakMap(), p = new WeakMap(), $ = new WeakSet(), j = function() {
  this.updateActiveElement();
  for (let t = 100; t < 500; t += 100)
    setTimeout(() => {
      this.updateActiveElement();
    }, t);
}, z = new WeakSet(), tt = function() {
  s(this, d) !== s(this, I).activeIndex && (o(this, d, s(this, I).activeIndex), c(this, k, H).call(this, s(this, h)[s(this, d)]));
}, P = new WeakSet(), et = function() {
  return Array.from(s(this, h)).map((t) => {
    const n = t.children[0].getAttribute("href");
    return this.el.querySelector(n);
  });
}, W = new WeakSet(), it = function() {
  s(this, m).forEach((t) => t.style.display = "none");
}, B = new WeakSet(), st = function() {
  s(this, m).forEach((n) => n.classList.add("caroulix-item")), o(this, w, yt(s(this, m))), s(this, w).classList.add("caroulix");
  const t = Math.random().toString().split(".")[1];
  s(this, w).id = "tab-caroulix-" + t, o(this, O, !0), this.options.animationDuration !== 300 && (this.options.caroulix.animationDuration = this.options.animationDuration), this.updateActiveElement();
}, k = new WeakSet(), H = function(t) {
  if (s(this, h).forEach((n) => n.classList.remove("active")), !this.options.disableActiveBar) {
    const n = t.getBoundingClientRect(), r = n.left, a = s(this, f).getBoundingClientRect().left, x = r - a + s(this, f).scrollLeft, v = n.width, ht = s(this, f).clientWidth - x - v;
    s(this, f).style.setProperty(K("tab-bar-left-offset"), Math.floor(x) + "px"), s(this, f).style.setProperty(K("tab-bar-right-offset"), Math.ceil(ht) + "px");
  }
  t.classList.add("active");
}, R = new WeakSet(), J = function() {
  const t = Array.from(s(this, h)).reduce((r, a) => (r += a.clientWidth, r), 0), n = s(this, u).clientWidth;
  t > n ? s(this, u).classList.contains("tab-arrow-show") || s(this, u).classList.add("tab-arrow-show") : s(this, u).classList.contains("tab-arrow-show") && s(this, u).classList.remove("tab-arrow-show");
}, N = new WeakSet(), nt = function(t) {
  t.preventDefault(), s(this, f).scrollLeft -= 40;
}, U = new WeakSet(), rt = function(t) {
  t.preventDefault(), s(this, f).scrollLeft += 40;
}, F = new WeakSet(), ot = function(t, n) {
  if (n.preventDefault(), s(this, p) || t.classList.contains("active"))
    return;
  const r = t.children[0].getAttribute("href");
  this.select(r.split("#")[1]);
}, V = new WeakSet(), at = function(t) {
  let n = 0, r = s(this, d);
  for (let a = 0; a < t; a++)
    r > 0 ? (n = r - 1, r--) : (r = s(this, h).length - 1, n = r);
  return n;
}, Z = new WeakSet(), lt = function(t) {
  let n = 0, r = s(this, d);
  for (let a = 0; a < t; a++)
    r < s(this, h).length - 1 ? (n = r + 1, r++) : (r = 0, n = r);
  return n;
}, q(_, "getDefaultOptions", () => wt);
ft({
  class: _,
  name: "Tab",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".tab"
  }
});
export {
  _ as default
};
