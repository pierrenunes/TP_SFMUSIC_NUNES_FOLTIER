var q = Object.defineProperty;
var $ = (s, t, e) => t in s ? q(s, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : s[t] = e;
var y = (s, t, e) => ($(s, typeof t != "symbol" ? t + "" : t, e), e), O = (s, t, e) => {
  if (!t.has(s))
    throw TypeError("Cannot " + e);
};
var r = (s, t, e) => (O(s, t, "read from private field"), e ? e.call(s) : t.get(s)), d = (s, t, e) => {
  if (t.has(s))
    throw TypeError("Cannot add the same private member more than once");
  t instanceof WeakSet ? t.add(s) : t.set(s, e);
}, a = (s, t, e, i) => (O(s, t, "write to private field"), i ? i.call(s, e) : t.set(s, e), e);
var g = (s, t, e) => (O(s, t, "access private method"), e);
const D = [], v = {
  components: [],
  plugins: [],
  prefix: "ax",
  mode: ""
}, E = (s) => v.components.find((t) => t.name === s).class, I = () => {
  const s = v.components.filter((e) => e.dataDetection), t = v.plugins.filter((e) => e.dataDetection);
  return [...s, ...t].map((e) => e.name);
}, U = (s, t) => {
  if (!s.name || !s.class) {
    console.error(`[Axentix] Error registering ${t} : Missing required parameters.`);
    return;
  }
  if (v[t].some((e) => e.name === s.name)) {
    console.error(`[Axentix] Error registering ${t} : Already exist.`);
    return;
  }
  s.autoInit && (s.autoInit.selector = s.autoInit.selector += ":not(.no-axentix-init)"), v[t].push(s);
}, N = (s) => {
  U(s, "components");
}, z = (s) => s.replace(/[\w]([A-Z])/g, (t) => t[0] + "-" + t[1]).toLowerCase(), F = (s, t = "") => {
  const e = z(s);
  return t ? t + "-" + e : e;
}, Z = (s, t, e, i, o = "") => {
  const n = t[0].toUpperCase() + t.slice(1).toLowerCase();
  I().includes(n) && e !== "Collapsible" && n !== "Sidenav" && (s[t] = E(n).getDefaultOptions());
  const p = o ? o + "-" + t : t, m = w(s[t], e, i, p);
  if (!(Object.keys(m).length === 0 && s.constructor === Object))
    return m;
}, w = (s, t, e, i = "") => Object.keys(s).reduce((o, n) => {
  if (typeof s[n] == "object" && s[n] !== null) {
    const p = Z(s, n, t, e, i);
    p && (o[n] = p);
  } else if (s[n] !== null) {
    const p = "data-" + t.toLowerCase() + "-" + F(n, i);
    if (e.hasAttribute(p)) {
      const m = e.getAttribute(p);
      o[n] = typeof s[n] == "number" ? Number(m) : m, typeof s[n] == "boolean" && (o[n] = m === "true");
    }
  }
  return o;
}, {}), B = (s, t) => {
  const e = Object.assign({}, E(s).getDefaultOptions());
  return w(e, s, t);
}, P = () => {
  document.querySelectorAll("[data-ax]").forEach((t) => {
    let e = t.dataset.ax;
    if (e = e[0].toUpperCase() + e.slice(1).toLowerCase(), !I().includes(e)) {
      console.error(
        `[Axentix] Error: ${e} component doesn't exist. 
 Did you forget to register him ?`,
        t
      );
      return;
    }
    try {
      const i = E(e);
      new i(`#${t.id}`);
    } catch (i) {
      console.error("[Axentix] Data: Unable to load " + e, i);
    }
  });
}, G = () => {
  try {
    new Axentix.Axentix("all");
  } catch (s) {
    console.error("[Axentix] Unable to auto init.", s);
  }
};
document.addEventListener("DOMContentLoaded", () => {
  document.documentElement.dataset.axentix && G(), P();
});
const S = (...s) => s.reduce((t, e) => {
  for (let i in e)
    t[i] = typeof e[i] == "object" && e[i] !== null ? S(t[i], e[i]) : e[i];
  return t;
}, {}), H = (s, t, e) => S(E(s).getDefaultOptions(), B(s, e), t), h = (s, t, e) => {
  const i = new CustomEvent("ax." + t, {
    detail: e || {},
    bubbles: !0
  });
  s.dispatchEvent(i);
}, J = (s) => {
  const t = D.find((e) => e.type !== "Toast" && "#" + e.instance.el.id === s);
  return t ? t.instance : !1;
}, K = (s, t, e, i) => {
  const o = s && t ? document.querySelector(`.ax-overlay[data-target="${e}"]`) : document.createElement("div");
  return o.classList.add("ax-overlay"), o.style.transitionDuration = i + "ms", o.dataset.target = e, o;
}, b = (s, t, e, i, o) => {
  !s || (i ? (t.addEventListener("click", e), document.body.appendChild(t), setTimeout(() => {
    t.classList.add("active");
  }, 50)) : (t.classList.remove("active"), setTimeout(() => {
    t.removeEventListener("click", e), document.body.removeChild(t);
  }, o)));
}, Q = (s, t = '[data-target="{ID}"]') => Array.from(document.querySelectorAll(t.replace("{ID}", s)));
class R {
  constructor() {
    y(this, "el");
  }
  removeListeners() {
  }
  setupListeners() {
  }
  setup() {
  }
  preventDbInstance(t) {
    if (t && J(t))
      throw new Error(`Instance already exist on ${t}`);
  }
  sync() {
    h(this.el, "component.sync"), this.removeListeners(), this.setupListeners();
  }
  reset() {
    h(this.el, "component.reset"), this.removeListeners(), this.setup();
  }
  destroy() {
    h(this.el, "component.destroy"), this.removeListeners();
    const t = D.findIndex((e) => e.instance.el.id === this.el.id);
    D.splice(t, 1);
  }
}
const V = {
  overlay: !0,
  bodyScrolling: !1,
  animationDuration: 400
};
var f, l, c, u, x, C, L, M, A, T;
class k extends R {
  constructor(e, i) {
    super();
    d(this, x);
    d(this, L);
    d(this, A);
    y(this, "options");
    y(this, "overlayElement");
    d(this, f, void 0);
    d(this, l, !1);
    d(this, c, !1);
    d(this, u, void 0);
    try {
      this.preventDbInstance(e), D.push({ type: "Modal", instance: this }), this.el = document.querySelector(e), this.options = H("Modal", i, this.el), this.setup();
    } catch (o) {
      console.error("[Axentix] Modal init error", o);
    }
  }
  setup() {
    h(this.el, "modal.setup"), a(this, f, Q(this.el.id)), a(this, l, !!this.el.classList.contains("active")), a(this, c, !1), this.setupListeners(), this.options.overlay && (this.overlayElement = K(
      r(this, l),
      this.options.overlay,
      this.el.id,
      this.options.animationDuration
    )), this.el.style.transitionDuration = this.options.animationDuration + "ms", this.el.style.animationDuration = this.options.animationDuration + "ms";
  }
  setupListeners() {
    a(this, u, g(this, A, T).bind(this)), r(this, f).forEach((e) => e.addEventListener("click", r(this, u)));
  }
  removeListeners() {
    r(this, f).forEach((e) => e.removeEventListener("click", r(this, u))), a(this, u, void 0);
  }
  open() {
    r(this, l) || (h(this.el, "modal.open"), a(this, l, !0), a(this, c, !0), g(this, L, M).call(this), this.el.style.display = "block", b(
      this.options.overlay,
      this.overlayElement,
      r(this, u),
      !0,
      this.options.animationDuration
    ), g(this, x, C).call(this, !1), setTimeout(() => {
      this.el.classList.add("active");
    }, 50), setTimeout(() => {
      a(this, c, !1), h(this.el, "modal.opened");
    }, this.options.animationDuration));
  }
  close() {
    !r(this, l) || (h(this.el, "modal.close"), a(this, c, !0), this.el.classList.remove("active"), b(
      this.options.overlay,
      this.overlayElement,
      r(this, u),
      !1,
      this.options.animationDuration
    ), setTimeout(() => {
      this.el.style.display = "", a(this, c, !1), a(this, l, !1), g(this, x, C).call(this, !0), h(this.el, "modal.closed");
    }, this.options.animationDuration));
  }
}
f = new WeakMap(), l = new WeakMap(), c = new WeakMap(), u = new WeakMap(), x = new WeakSet(), C = function(e) {
  this.options.bodyScrolling || (document.body.style.overflow = e ? "" : "hidden");
}, L = new WeakSet(), M = function() {
  const e = document.querySelectorAll(".modal.active").length + 1;
  this.options.overlay && (this.overlayElement.style.zIndex = String(800 + e * 10 - 2)), this.el.style.zIndex = String(800 + e * 10);
}, A = new WeakSet(), T = function(e) {
  e.preventDefault(), !r(this, c) && (r(this, l) ? this.close() : this.open());
}, y(k, "getDefaultOptions", () => V);
N({
  class: k,
  name: "Modal",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".modal"
  }
});
export {
  k as default
};
