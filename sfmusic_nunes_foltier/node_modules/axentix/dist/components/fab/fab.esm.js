var X = Object.defineProperty;
var Y = (s, e, t) => e in s ? X(s, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : s[e] = t;
var D = (s, e, t) => (Y(s, typeof e != "symbol" ? e + "" : e, t), t), F = (s, e, t) => {
  if (!e.has(s))
    throw TypeError("Cannot " + t);
};
var o = (s, e, t) => (F(s, e, "read from private field"), t ? t.call(s) : e.get(s)), c = (s, e, t) => {
  if (e.has(s))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(s) : e.set(s, t);
}, n = (s, e, t, i) => (F(s, e, "write to private field"), i ? i.call(s, t) : e.set(s, t), t);
var x = (s, e, t) => (F(s, e, "access private method"), t);
const A = [], L = {
  components: [],
  plugins: [],
  prefix: "ax",
  mode: ""
}, w = (s) => L.components.find((e) => e.name === s).class, q = () => {
  const s = L.components.filter((t) => t.dataDetection), e = L.plugins.filter((t) => t.dataDetection);
  return [...s, ...e].map((t) => t.name);
}, H = (s, e) => {
  if (!s.name || !s.class) {
    console.error(`[Axentix] Error registering ${e} : Missing required parameters.`);
    return;
  }
  if (L[e].some((t) => t.name === s.name)) {
    console.error(`[Axentix] Error registering ${e} : Already exist.`);
    return;
  }
  s.autoInit && (s.autoInit.selector = s.autoInit.selector += ":not(.no-axentix-init)"), L[e].push(s);
}, W = (s) => {
  H(s, "components");
}, Z = (s) => s.replace(/[\w]([A-Z])/g, (e) => e[0] + "-" + e[1]).toLowerCase(), z = (s, e = "") => {
  const t = Z(s);
  return e ? e + "-" + t : t;
}, B = (s, e, t, i, a = "") => {
  const r = e[0].toUpperCase() + e.slice(1).toLowerCase();
  q().includes(r) && t !== "Collapsible" && r !== "Sidenav" && (s[e] = w(r).getDefaultOptions());
  const u = a ? a + "-" + e : e, v = S(s[e], t, i, u);
  if (!(Object.keys(v).length === 0 && s.constructor === Object))
    return v;
}, S = (s, e, t, i = "") => Object.keys(s).reduce((a, r) => {
  if (typeof s[r] == "object" && s[r] !== null) {
    const u = B(s, r, e, t, i);
    u && (a[r] = u);
  } else if (s[r] !== null) {
    const u = "data-" + e.toLowerCase() + "-" + z(r, i);
    if (t.hasAttribute(u)) {
      const v = t.getAttribute(u);
      a[r] = typeof s[r] == "number" ? Number(v) : v, typeof s[r] == "boolean" && (a[r] = v === "true");
    }
  }
  return a;
}, {}), G = (s, e) => {
  const t = Object.assign({}, w(s).getDefaultOptions());
  return S(t, s, e);
}, J = () => {
  document.querySelectorAll("[data-ax]").forEach((e) => {
    let t = e.dataset.ax;
    if (t = t[0].toUpperCase() + t.slice(1).toLowerCase(), !q().includes(t)) {
      console.error(
        `[Axentix] Error: ${t} component doesn't exist. 
 Did you forget to register him ?`,
        e
      );
      return;
    }
    try {
      const i = w(t);
      new i(`#${e.id}`);
    } catch (i) {
      console.error("[Axentix] Data: Unable to load " + t, i);
    }
  });
}, K = () => {
  try {
    new Axentix.Axentix("all");
  } catch (s) {
    console.error("[Axentix] Unable to auto init.", s);
  }
};
document.addEventListener("DOMContentLoaded", () => {
  document.documentElement.dataset.axentix && K(), J();
});
const T = (...s) => s.reduce((e, t) => {
  for (let i in t)
    e[i] = typeof t[i] == "object" && t[i] !== null ? T(e[i], t[i]) : t[i];
  return e;
}, {}), Q = (s, e, t) => T(w(s).getDefaultOptions(), G(s, t), e), y = (s, e, t) => {
  const i = new CustomEvent("ax." + e, {
    detail: t || {},
    bubbles: !0
  });
  s.dispatchEvent(i);
}, V = (s) => {
  const e = A.find((t) => t.type !== "Toast" && "#" + t.instance.el.id === s);
  return e ? e.instance : !1;
}, _ = (s, e = '[data-target="{ID}"]') => Array.from(document.querySelectorAll(e.replace("{ID}", s)));
class j {
  constructor() {
    D(this, "el");
  }
  removeListeners() {
  }
  setupListeners() {
  }
  setup() {
  }
  preventDbInstance(e) {
    if (e && V(e))
      throw new Error(`Instance already exist on ${e}`);
  }
  sync() {
    y(this.el, "component.sync"), this.removeListeners(), this.setupListeners();
  }
  reset() {
    y(this.el, "component.reset"), this.removeListeners(), this.setup();
  }
  destroy() {
    y(this.el, "component.destroy"), this.removeListeners();
    const e = A.findIndex((t) => t.instance.el.id === this.el.id);
    A.splice(e, 1);
  }
}
const tt = {
  animationDuration: 300,
  hover: !0,
  direction: "top",
  position: "bottom-right",
  offsetX: "1rem",
  offsetY: "1.5rem"
};
var h, l, b, p, d, f, m, g, E, M, C, R, O, U, I, N, k, P;
class $ extends j {
  constructor(t, i) {
    super();
    c(this, E);
    c(this, C);
    c(this, O);
    c(this, I);
    c(this, k);
    D(this, "options");
    c(this, h, !1);
    c(this, l, !1);
    c(this, b, void 0);
    c(this, p, void 0);
    c(this, d, void 0);
    c(this, f, void 0);
    c(this, m, void 0);
    c(this, g, void 0);
    try {
      this.preventDbInstance(t), A.push({ type: "Fab", instance: this }), this.el = document.querySelector(t), this.options = Q("Fab", i, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Fab init error", a);
    }
  }
  setup() {
    y(this.el, "fab.setup"), n(this, h, !1), n(this, l, !1), n(this, b, _(this.el.id)[0]), n(this, p, this.el.querySelector(".fab-menu")), x(this, E, M).call(this), this.setupListeners(), this.el.style.transitionDuration = this.options.animationDuration + "ms", x(this, C, R).call(this);
  }
  setupListeners() {
    this.options.hover ? (n(this, d, this.open.bind(this)), n(this, f, this.close.bind(this)), this.el.addEventListener("mouseenter", o(this, d)), this.el.addEventListener("mouseleave", o(this, f))) : (n(this, g, x(this, k, P).bind(this)), this.el.addEventListener("click", o(this, g))), n(this, m, x(this, I, N).bind(this)), document.addEventListener("click", o(this, m), !0);
  }
  removeListeners() {
    this.options.hover ? (this.el.removeEventListener("mouseenter", o(this, d)), this.el.removeEventListener("mouseleave", o(this, f)), n(this, d, void 0), n(this, f, void 0)) : (this.el.removeEventListener("click", o(this, g)), n(this, g, void 0)), document.removeEventListener("click", o(this, m), !0), n(this, m, void 0);
  }
  open() {
    o(this, l) || (y(this.el, "fab.open"), n(this, h, !0), n(this, l, !0), this.el.classList.add("active"), setTimeout(() => {
      n(this, h, !1);
    }, this.options.animationDuration));
  }
  close() {
    !o(this, l) || (y(this.el, "fab.close"), n(this, h, !0), n(this, l, !1), this.el.classList.remove("active"), setTimeout(() => {
      n(this, h, !1);
    }, this.options.animationDuration));
  }
}
h = new WeakMap(), l = new WeakMap(), b = new WeakMap(), p = new WeakMap(), d = new WeakMap(), f = new WeakMap(), m = new WeakMap(), g = new WeakMap(), E = new WeakSet(), M = function() {
  ["right", "left", "top", "bottom"].includes(this.options.direction) || (this.options.direction = "top"), ["top-right", "top-left", "bottom-right", "bottom-left"].includes(this.options.position) || (this.options.position = "bottom-right");
}, C = new WeakSet(), R = function() {
  this.options.position.split("-")[0] === "top" ? this.el.style.top = this.options.offsetY : this.el.style.bottom = this.options.offsetY, this.options.position.split("-")[1] === "right" ? this.el.style.right = this.options.offsetX : this.el.style.left = this.options.offsetX, (this.options.direction === "right" || this.options.direction === "left") && this.el.classList.add("fab-dir-x"), x(this, O, U).call(this);
}, O = new WeakSet(), U = function() {
  if (this.options.direction === "top" || this.options.direction === "bottom") {
    const t = o(this, b).clientHeight;
    this.options.direction === "top" ? o(this, p).style.bottom = t + "px" : o(this, p).style.top = t + "px";
  } else {
    const t = o(this, b).clientWidth;
    this.options.direction === "right" ? o(this, p).style.left = t + "px" : o(this, p).style.right = t + "px";
  }
}, I = new WeakSet(), N = function(t) {
  !this.el.contains(t.target) && o(this, l) && this.close();
}, k = new WeakSet(), P = function(t) {
  t.preventDefault(), !o(this, h) && (o(this, l) ? this.close() : this.open());
}, D($, "getDefaultOptions", () => tt);
W({
  class: $,
  name: "Fab",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".fab:not(i)"
  }
});
export {
  $ as default
};
