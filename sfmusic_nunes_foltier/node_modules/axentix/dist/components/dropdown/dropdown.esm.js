var B = Object.defineProperty;
var F = (s, t, e) => t in s ? B(s, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : s[t] = e;
var C = (s, t, e) => (F(s, typeof t != "symbol" ? t + "" : t, e), e), b = (s, t, e) => {
  if (!t.has(s))
    throw TypeError("Cannot " + e);
};
var n = (s, t, e) => (b(s, t, "read from private field"), e ? e.call(s) : t.get(s)), a = (s, t, e) => {
  if (t.has(s))
    throw TypeError("Cannot add the same private member more than once");
  t instanceof WeakSet ? t.add(s) : t.set(s, e);
}, o = (s, t, e, i) => (b(s, t, "write to private field"), i ? i.call(s, e) : t.set(s, e), e);
var f = (s, t, e) => (b(s, t, "access private method"), e);
const x = [], D = {
  components: [],
  plugins: [],
  prefix: "ax",
  mode: ""
}, k = (s) => D.components.find((t) => t.name === s).class, q = () => {
  const s = D.components.filter((e) => e.dataDetection), t = D.plugins.filter((e) => e.dataDetection);
  return [...s, ...t].map((e) => e.name);
}, M = (s, t) => {
  if (!s.name || !s.class) {
    console.error(`[Axentix] Error registering ${t} : Missing required parameters.`);
    return;
  }
  if (D[t].some((e) => e.name === s.name)) {
    console.error(`[Axentix] Error registering ${t} : Already exist.`);
    return;
  }
  s.autoInit && (s.autoInit.selector = s.autoInit.selector += ":not(.no-axentix-init)"), D[t].push(s);
}, P = (s) => {
  M(s, "components");
}, Z = (s) => s.replace(/[\w]([A-Z])/g, (t) => t[0] + "-" + t[1]).toLowerCase(), z = (s, t = "") => {
  const e = Z(s);
  return t ? t + "-" + e : e;
}, G = (s, t, e, i, h = "") => {
  const r = t[0].toUpperCase() + t.slice(1).toLowerCase();
  q().includes(r) && e !== "Collapsible" && r !== "Sidenav" && (s[t] = k(r).getDefaultOptions());
  const u = h ? h + "-" + t : t, w = H(s[t], e, i, u);
  if (!(Object.keys(w).length === 0 && s.constructor === Object))
    return w;
}, H = (s, t, e, i = "") => Object.keys(s).reduce((h, r) => {
  if (typeof s[r] == "object" && s[r] !== null) {
    const u = G(s, r, t, e, i);
    u && (h[r] = u);
  } else if (s[r] !== null) {
    const u = "data-" + t.toLowerCase() + "-" + z(r, i);
    if (e.hasAttribute(u)) {
      const w = e.getAttribute(u);
      h[r] = typeof s[r] == "number" ? Number(w) : w, typeof s[r] == "boolean" && (h[r] = w === "true");
    }
  }
  return h;
}, {}), J = (s, t) => {
  const e = Object.assign({}, k(s).getDefaultOptions());
  return H(e, s, t);
}, K = () => {
  document.querySelectorAll("[data-ax]").forEach((t) => {
    let e = t.dataset.ax;
    if (e = e[0].toUpperCase() + e.slice(1).toLowerCase(), !q().includes(e)) {
      console.error(
        `[Axentix] Error: ${e} component doesn't exist. 
 Did you forget to register him ?`,
        t
      );
      return;
    }
    try {
      const i = k(e);
      new i(`#${t.id}`);
    } catch (i) {
      console.error("[Axentix] Data: Unable to load " + e, i);
    }
  });
}, Q = () => {
  try {
    new Axentix.Axentix("all");
  } catch (s) {
    console.error("[Axentix] Unable to auto init.", s);
  }
};
document.addEventListener("DOMContentLoaded", () => {
  document.documentElement.dataset.axentix && Q(), K();
});
const R = (...s) => s.reduce((t, e) => {
  for (let i in e)
    t[i] = typeof e[i] == "object" && e[i] !== null ? R(t[i], e[i]) : e[i];
  return t;
}, {}), W = (s, t, e) => R(k(s).getDefaultOptions(), J(s, e), t), l = (s, t, e) => {
  const i = new CustomEvent("ax." + t, {
    detail: e || {},
    bubbles: !0
  });
  s.dispatchEvent(i);
}, X = (s) => x.filter((t) => t.type === s).map((t) => t.instance), Y = (s) => {
  const t = x.find((e) => e.type !== "Toast" && "#" + e.instance.el.id === s);
  return t ? t.instance : !1;
}, _ = (s, t = '[data-target="{ID}"]') => Array.from(document.querySelectorAll(t.replace("{ID}", s)));
class j {
  constructor() {
    C(this, "el");
  }
  removeListeners() {
  }
  setupListeners() {
  }
  setup() {
  }
  preventDbInstance(t) {
    if (t && Y(t))
      throw new Error(`Instance already exist on ${t}`);
  }
  sync() {
    l(this.el, "component.sync"), this.removeListeners(), this.setupListeners();
  }
  reset() {
    l(this.el, "component.reset"), this.removeListeners(), this.setup();
  }
  destroy() {
    l(this.el, "component.destroy"), this.removeListeners();
    const t = x.findIndex((e) => e.instance.el.id === this.el.id);
    x.splice(t, 1);
  }
}
const tt = {
  animationDuration: 300,
  animationType: "none",
  hover: !1,
  autoClose: !0,
  preventViewport: !1,
  closeOnClick: !0
};
var p, m, d, c, g, v, y, A, V, E, $, O, U, T, N, L, I;
class S extends j {
  constructor(e, i) {
    super();
    a(this, A);
    a(this, E);
    a(this, O);
    a(this, T);
    a(this, L);
    C(this, "options");
    a(this, p, void 0);
    a(this, m, void 0);
    a(this, d, !1);
    a(this, c, !1);
    a(this, g, void 0);
    a(this, v, void 0);
    a(this, y, void 0);
    try {
      this.preventDbInstance(e), x.push({ type: "Dropdown", instance: this }), this.el = document.querySelector(e), this.options = W("Dropdown", i, this.el), this.setup();
    } catch (h) {
      console.error("[Axentix] Dropdown init error", h);
    }
  }
  setup() {
    l(this.el, "dropdown.setup"), o(this, p, this.el.querySelector(".dropdown-content")), o(this, m, _(this.el.id)[0]), o(this, d, !1), o(this, c, !!this.el.classList.contains("active")), this.options.hover ? this.el.classList.add("active-hover") : this.setupListeners(), this.options.preventViewport && this.el.classList.add("dropdown-vp"), f(this, A, V).call(this);
  }
  setupListeners() {
    this.options.hover || (o(this, v, f(this, O, U).bind(this)), n(this, m).addEventListener("click", n(this, v)), o(this, g, f(this, E, $).bind(this)), document.addEventListener("click", n(this, g), !0), o(this, y, f(this, L, I).bind(this)), this.options.preventViewport && window.addEventListener("scroll", n(this, y)));
  }
  removeListeners() {
    this.options.hover || (n(this, m).removeEventListener("click", n(this, v)), o(this, v, void 0), document.removeEventListener("click", n(this, g), !0), o(this, g, void 0), this.options.preventViewport && window.removeEventListener("scroll", n(this, y)), o(this, y, void 0));
  }
  open() {
    n(this, c) || (l(this.el, "dropdown.open"), n(this, p).style.display = "flex", this.options.preventViewport && f(this, L, I).call(this), setTimeout(() => {
      this.el.classList.add("active"), o(this, c, !0);
    }, 10), this.options.autoClose && f(this, T, N).call(this), this.options.animationType !== "none" ? (o(this, d, !0), setTimeout(() => {
      o(this, d, !1), l(this.el, "dropdown.opened");
    }, this.options.animationDuration)) : l(this.el, "dropdown.opened"));
  }
  close() {
    !n(this, c) || (l(this.el, "dropdown.close"), this.el.classList.remove("active"), this.options.animationType !== "none" ? (o(this, d, !0), setTimeout(() => {
      n(this, p).style.display = "", o(this, d, !1), o(this, c, !1), l(this.el, "dropdown.closed");
    }, this.options.animationDuration)) : (n(this, p).style.display = "", o(this, c, !1), l(this.el, "dropdown.closed")));
  }
}
p = new WeakMap(), m = new WeakMap(), d = new WeakMap(), c = new WeakMap(), g = new WeakMap(), v = new WeakMap(), y = new WeakMap(), A = new WeakSet(), V = function() {
  const e = ["none", "fade"];
  this.options.animationType = this.options.animationType.toLowerCase(), e.includes(this.options.animationType) || (this.options.animationType = "none"), this.options.animationType === "fade" && !this.options.hover && (n(this, p).style.transitionDuration = this.options.animationDuration + "ms", this.el.classList.add("dropdown-anim-fade"));
}, E = new WeakSet(), $ = function(e) {
  e.target === n(this, m) || n(this, d) || !n(this, c) || !this.options.closeOnClick && e.target.closest(".dropdown-content") || this.close();
}, O = new WeakSet(), U = function(e) {
  e.preventDefault(), !n(this, d) && (n(this, c) ? this.close() : this.open());
}, T = new WeakSet(), N = function() {
  X("Dropdown").forEach((e) => {
    e.el.id !== this.el.id && e.close();
  });
}, L = new WeakSet(), I = function() {
  const e = n(this, p).getBoundingClientRect(), i = e.height - (e.bottom - (window.innerHeight || document.documentElement.clientHeight)) - 10;
  n(this, p).style.maxHeight = i + "px";
}, C(S, "getDefaultOptions", () => tt);
P({
  class: S,
  name: "Dropdown",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".dropdown"
  }
});
export {
  S as default
};
