var cr = Object.defineProperty;
var li = Math.pow, dr = (o, i, t) => i in o ? cr(o, i, { enumerable: !0, configurable: !0, writable: !0, value: t }) : o[i] = t;
var u = (o, i, t) => (dr(o, typeof i != "symbol" ? i + "" : i, t), t), Xs = (o, i, t) => {
  if (!i.has(o))
    throw TypeError("Cannot " + t);
};
var e = (o, i, t) => (Xs(o, i, "read from private field"), t ? t.call(o) : i.get(o)), r = (o, i, t) => {
  if (i.has(o))
    throw TypeError("Cannot add the same private member more than once");
  i instanceof WeakSet ? i.add(o) : i.set(o, t);
}, n = (o, i, t, s) => (Xs(o, i, "write to private field"), s ? s.call(o, t) : i.set(o, t), t), Ys = (o, i, t, s) => ({
  set _(a) {
    n(o, i, a, t);
  },
  get _() {
    return e(o, i, s);
  }
}), l = (o, i, t) => (Xs(o, i, "access private method"), t);
const aa = "2.2.1", v = [], Q = {
  components: [],
  plugins: [],
  prefix: "ax",
  mode: ""
}, J = (o) => `--${Q.prefix}-${o}`, pe = (o) => Q.components.find((i) => i.name === o).class, bo = () => {
  const o = Q.components.filter((t) => t.dataDetection), i = Q.plugins.filter((t) => t.dataDetection);
  return [...o, ...i].map((t) => t.name);
}, pr = () => {
  const o = Q.components.filter(
    (t) => t.autoInit && t.autoInit.enabled
  ), i = Q.plugins.filter((t) => t.autoInit && t.autoInit.enabled);
  return [...o, ...i].reduce((t, s) => (t[s.name] = document.querySelectorAll(s.autoInit.selector), t), {});
}, xo = (o, i) => {
  if (!o.name || !o.class) {
    console.error(`[Axentix] Error registering ${i} : Missing required parameters.`);
    return;
  }
  if (Q[i].some((t) => t.name === o.name)) {
    console.error(`[Axentix] Error registering ${i} : Already exist.`);
    return;
  }
  o.autoInit && (o.autoInit.selector = o.autoInit.selector += ":not(.no-axentix-init)"), Q[i].push(o);
}, M = (o) => {
  xo(o, "components");
}, la = (o) => {
  xo(o, "plugins");
}, ha = () => {
  !window || (window.Axentix || (window.Axentix = {}), [...Q.components, ...Q.plugins].forEach((o) => {
    window.Axentix[o.name] = o.class;
  }));
}, ur = (o) => o.replace(/[\w]([A-Z])/g, (i) => i[0] + "-" + i[1]).toLowerCase(), fr = (o, i = "") => {
  const t = ur(o);
  return i ? i + "-" + t : t;
}, mr = (o, i, t, s, a = "") => {
  const h = i[0].toUpperCase() + i.slice(1).toLowerCase();
  bo().includes(h) && t !== "Collapsible" && h !== "Sidenav" && (o[i] = pe(h).getDefaultOptions());
  const c = a ? a + "-" + i : i, p = Lo(o[i], t, s, c);
  if (!(Object.keys(p).length === 0 && o.constructor === Object))
    return p;
}, Lo = (o, i, t, s = "") => Object.keys(o).reduce((a, h) => {
  if (typeof o[h] == "object" && o[h] !== null) {
    const c = mr(o, h, i, t, s);
    c && (a[h] = c);
  } else if (o[h] !== null) {
    const c = "data-" + i.toLowerCase() + "-" + fr(h, s);
    if (t.hasAttribute(c)) {
      const p = t.getAttribute(c);
      a[h] = typeof o[h] == "number" ? Number(p) : p, typeof o[h] == "boolean" && (a[h] = p === "true");
    }
  }
  return a;
}, {}), vr = (o, i) => {
  const t = Object.assign({}, pe(o).getDefaultOptions());
  return Lo(t, o, i);
}, yr = () => {
  document.querySelectorAll("[data-ax]").forEach((i) => {
    let t = i.dataset.ax;
    if (t = t[0].toUpperCase() + t.slice(1).toLowerCase(), !bo().includes(t)) {
      console.error(
        `[Axentix] Error: ${t} component doesn't exist. 
 Did you forget to register him ?`,
        i
      );
      return;
    }
    try {
      const s = pe(t);
      new s(`#${i.id}`);
    } catch (s) {
      console.error("[Axentix] Data: Unable to load " + t, s);
    }
  });
}, gr = () => {
  try {
    new Axentix.Axentix("all");
  } catch (o) {
    console.error("[Axentix] Unable to auto init.", o);
  }
};
document.addEventListener("DOMContentLoaded", () => {
  document.documentElement.dataset.axentix && gr(), yr();
});
const ui = (...o) => o.reduce((i, t) => {
  for (let s in t)
    i[s] = typeof t[s] == "object" && t[s] !== null ? ui(i[s], t[s]) : t[s];
  return i;
}, {}), O = (o, i, t) => ui(pe(o).getDefaultOptions(), vr(o, t), i), lo = (o, i = document.createElement("div")) => (o[0].parentElement.insertBefore(i, o[0]), o.forEach((s) => i.appendChild(s)), i), br = (o) => o.replaceWith(...o.childNodes), d = (o, i, t) => {
  const s = new CustomEvent("ax." + i, {
    detail: t || {},
    bubbles: !0
  });
  o.dispatchEvent(s);
}, xr = () => "ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0, Lr = () => !!window.PointerEvent && "maxTouchPoints" in window.navigator && window.navigator.maxTouchPoints >= 0, ho = () => xr() ? "touch" : Lr() ? "pointer" : "mouse", Ns = (o) => v.filter((i) => i.type === o).map((i) => i.instance), Ws = (o) => {
  const i = v.find((t) => t.type !== "Toast" && "#" + t.instance.el.id === o);
  return i ? i.instance : !1;
}, co = () => Math.random().toString().split(".")[1], ca = () => v, da = (o) => Ws(o).sync(), pa = () => v.map((o) => o.instance.sync()), ua = (o) => Ws(o).reset(), fa = () => v.map((o) => o.instance.reset()), ma = (o) => Ws(o).destroy(), va = () => v.map((o) => o.instance.destroy()), wo = (o, i, t, s) => {
  const a = o && i ? document.querySelector(`.ax-overlay[data-target="${t}"]`) : document.createElement("div");
  return a.classList.add("ax-overlay"), a.style.transitionDuration = s + "ms", a.dataset.target = t, a;
}, fi = (o, i, t, s, a) => {
  !o || (s ? (i.addEventListener("click", t), document.body.appendChild(i), setTimeout(() => {
    i.classList.add("active");
  }, 50)) : (i.classList.remove("active"), setTimeout(() => {
    i.removeEventListener("click", t), document.body.removeChild(i);
  }, a)));
}, ai = (o, i = '[data-target="{ID}"]') => Array.from(document.querySelectorAll(i.replace("{ID}", o))), mo = (o) => o.targetTouches && o.targetTouches.length >= 1 ? o.targetTouches[0].clientY : o.changedTouches && o.changedTouches.length >= 1 ? o.changedTouches[0].pageY : o.clientY, ue = (o) => o.targetTouches && o.targetTouches.length >= 1 ? o.targetTouches[0].clientX : o.changedTouches && o.changedTouches.length >= 1 ? o.changedTouches[0].pageX : o.clientX, wr = () => window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
class z {
  constructor() {
    u(this, "el");
  }
  removeListeners() {
  }
  setupListeners() {
  }
  setup() {
  }
  preventDbInstance(i) {
    if (i && Ws(i))
      throw new Error(`Instance already exist on ${i}`);
  }
  sync() {
    d(this.el, "component.sync"), this.removeListeners(), this.setupListeners();
  }
  reset() {
    d(this.el, "component.reset"), this.removeListeners(), this.setup();
  }
  destroy() {
    d(this.el, "component.destroy"), this.removeListeners();
    const i = v.findIndex((t) => t.instance.el.id === this.el.id);
    v.splice(i, 1);
  }
}
const Er = {
  animationDuration: 500,
  height: "",
  backToOpposite: !0,
  enableTouch: !0,
  indicators: {
    enabled: !1,
    isFlat: !1,
    customClasses: ""
  },
  autoplay: {
    enabled: !0,
    interval: 5e3,
    side: "right"
  }
};
var Dt, dt, y, Ct, fe, Tt, me, It, $, ve, At, pt, ut, St, kt, Rt, Ot, et, He, Be, T, Ne, b, gi, Do, bi, Co, We, Fs, it, wt, ye, hi, xi, To, Li, Io, wi, Ao, Ei, So, Di, ko, Ve, Us, ge, ci, Xe, _s;
class Eo extends z {
  constructor(t, s) {
    super();
    r(this, gi);
    r(this, bi);
    r(this, We);
    r(this, it);
    r(this, ye);
    r(this, xi);
    r(this, Li);
    r(this, wi);
    r(this, Ei);
    r(this, Di);
    r(this, Ve);
    r(this, ge);
    r(this, Xe);
    u(this, "options");
    u(this, "activeIndex");
    r(this, Dt, 0);
    r(this, dt, !1);
    r(this, y, void 0);
    r(this, Ct, 0);
    r(this, fe, 0);
    r(this, Tt, !1);
    r(this, me, !1);
    r(this, It, !1);
    r(this, $, 0);
    r(this, ve, 0);
    r(this, At, void 0);
    r(this, pt, void 0);
    r(this, ut, void 0);
    r(this, St, void 0);
    r(this, kt, void 0);
    r(this, Rt, void 0);
    r(this, Ot, void 0);
    r(this, et, void 0);
    r(this, He, 0);
    r(this, Be, 0);
    r(this, T, void 0);
    r(this, Ne, void 0);
    r(this, b, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Caroulix", instance: this }), this.el = document.querySelector(t), this.options = O("Caroulix", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Caroulix init error", a);
    }
  }
  setup() {
    d(this.el, "caroulix.setup"), this.options.autoplay.side = this.options.autoplay.side.toLowerCase(), ["right", "left"].includes(this.options.autoplay.side) || (this.options.autoplay.side = "right"), this.activeIndex = 0, n(this, Dt, 0), n(this, dt, !1), n(this, b, ho()), n(this, y, l(this, gi, Do).call(this)), this.options.indicators.enabled && l(this, Ei, So).call(this);
    const s = this.el.querySelector(".active");
    s ? this.activeIndex = e(this, y).indexOf(s) : e(this, y)[0].classList.add("active"), l(this, bi, Co).call(this), e(this, Ct) === 0 && l(this, ye, hi).call(this), this.setupListeners(), this.options.autoplay.enabled && this.play();
  }
  setupListeners() {
    n(this, At, l(this, ye, hi).bind(this)), window.addEventListener("resize", e(this, At)), e(this, ut) && (n(this, St, this.next.bind(this, 1)), e(this, ut).addEventListener("click", e(this, St))), e(this, pt) && (n(this, kt, this.prev.bind(this, 1)), e(this, pt).addEventListener("click", e(this, kt))), this.options.enableTouch && (n(this, Rt, l(this, xi, To).bind(this)), n(this, Ot, l(this, Li, Io).bind(this)), n(this, et, l(this, wi, Ao).bind(this)), this.el.addEventListener(
      `${e(this, b)}${e(this, b) === "touch" ? "start" : "down"}`,
      e(this, Rt)
    ), this.el.addEventListener(`${e(this, b)}move`, e(this, Ot)), this.el.addEventListener(
      `${e(this, b)}${e(this, b) === "touch" ? "end" : "up"}`,
      e(this, et)
    ), this.el.addEventListener(
      e(this, b) === "pointer" ? "pointerleave" : "mouseleave",
      e(this, et)
    ));
  }
  removeListeners() {
    window.removeEventListener("resize", e(this, At)), n(this, At, void 0), e(this, ut) && (e(this, ut).removeEventListener("click", e(this, St)), n(this, St, void 0)), e(this, pt) && (e(this, pt).removeEventListener("click", e(this, kt)), n(this, kt, void 0)), this.options.enableTouch && (this.el.removeEventListener(
      `${e(this, b)}${e(this, b) === "pointer" ? "down" : "start"}`,
      e(this, Rt)
    ), this.el.removeEventListener(`${e(this, b)}move`, e(this, Ot)), this.el.removeEventListener(
      `${e(this, b)}${e(this, b) === "touch" ? "end" : "up"}`,
      e(this, et)
    ), this.el.removeEventListener(
      e(this, b) === "pointer" ? "pointerleave" : "mouseleave",
      e(this, et)
    ), n(this, Rt, void 0), n(this, Ot, void 0), n(this, et, void 0));
  }
  goTo(t) {
    if (t === this.activeIndex)
      return;
    (t > this.activeIndex ? "right" : "left") === "left" ? this.prev(Math.abs(this.activeIndex - t)) : this.next(Math.abs(this.activeIndex - t)), this.options.indicators.enabled && l(this, Ve, Us).call(this);
  }
  play() {
    !this.options.autoplay.enabled || (this.stop(), n(this, Ne, setInterval(() => {
      this.options.autoplay.side === "right" ? this.next(1, !1) : this.prev(1, !1);
    }, this.options.autoplay.interval)));
  }
  stop() {
    !this.options.autoplay.enabled || clearInterval(e(this, Ne));
  }
  next(t = 1, s = !0) {
    e(this, Tt) || this.activeIndex === e(this, y).length - 1 && !this.options.backToOpposite || (d(this.el, "caroulix.next", { step: t }), n(this, dt, !0), s && this.options.autoplay.enabled && this.stop(), this.activeIndex < e(this, y).length - 1 ? this.activeIndex += t : this.options.backToOpposite && (this.activeIndex = 0), l(this, Xe, _s).call(this), l(this, it, wt).call(this), s && this.options.autoplay.enabled && this.play());
  }
  prev(t = 1, s = !0) {
    e(this, Tt) || this.activeIndex === 0 && !this.options.backToOpposite || (d(this.el, "caroulix.prev", { step: t }), n(this, dt, !0), s && this.options.autoplay.enabled && this.stop(), this.activeIndex > 0 ? this.activeIndex -= t : this.options.backToOpposite && (this.activeIndex = e(this, y).length - 1), l(this, Xe, _s).call(this), l(this, it, wt).call(this), s && this.options.autoplay.enabled && this.play());
  }
}
Dt = new WeakMap(), dt = new WeakMap(), y = new WeakMap(), Ct = new WeakMap(), fe = new WeakMap(), Tt = new WeakMap(), me = new WeakMap(), It = new WeakMap(), $ = new WeakMap(), ve = new WeakMap(), At = new WeakMap(), pt = new WeakMap(), ut = new WeakMap(), St = new WeakMap(), kt = new WeakMap(), Rt = new WeakMap(), Ot = new WeakMap(), et = new WeakMap(), He = new WeakMap(), Be = new WeakMap(), T = new WeakMap(), Ne = new WeakMap(), b = new WeakMap(), gi = new WeakSet(), Do = function() {
  return Array.from(this.el.children).reduce((t, s) => (s.classList.contains("caroulix-item") && t.push(s), s.classList.contains("caroulix-prev") && n(this, pt, s), s.classList.contains("caroulix-next") && n(this, ut, s), t), []);
}, bi = new WeakSet(), Co = function() {
  n(this, Ct, 0), n(this, fe, 0), e(this, y).forEach((t) => {
    const s = t.querySelector("img, video");
    s && (Ys(this, Ct)._++, s.complete ? l(this, We, Fs).call(this, s, !0) : (s.loadRef = l(this, We, Fs).bind(this, s), s.addEventListener("load", s.loadRef)));
  });
}, We = new WeakSet(), Fs = function(t, s) {
  Ys(this, fe)._++, s || (t.removeEventListener("load", t.loadRef), t.loadRef = void 0), e(this, Ct) == e(this, fe) && (l(this, ye, hi).call(this), l(this, it, wt).call(this, !0));
}, it = new WeakSet(), wt = function(t = !1) {
  const s = this.el.getBoundingClientRect().width;
  e(this, y).forEach((h, c) => {
    h.style.transform = `translateX(${s * c - s * this.activeIndex - e(this, Dt)}px)`;
  }), this.options.indicators.enabled && l(this, Ve, Us).call(this), e(this, y).find((h) => h.classList.contains("active")).classList.remove("active"), e(this, y)[this.activeIndex].classList.add("active"), setTimeout(() => {
    n(this, dt, !1);
  }, this.options.animationDuration), t && setTimeout(() => l(this, ge, ci).call(this, this.options.animationDuration), 50);
}, ye = new WeakSet(), hi = function() {
  if (n(this, Tt, !0), this.el.style.transitionDuration = "", this.options.autoplay.enabled && this.play(), this.options.height)
    this.el.style.height = this.options.height;
  else {
    const t = e(this, y).map((a) => a.offsetHeight), s = Math.max(...t);
    this.el.style.height = s + "px";
  }
  l(this, it, wt).call(this), setTimeout(() => {
    this.el.style.transitionDuration = this.options.animationDuration + "ms", n(this, Tt, !1);
  }, 50);
}, xi = new WeakSet(), To = function(t) {
  t.target.closest(".caroulix-arrow") || t.target.closest(".caroulix-indicators") || e(this, dt) || (t.type !== "touchstart" && t.preventDefault(), this.options.autoplay.enabled && this.stop(), l(this, ge, ci).call(this, 0), n(this, It, !0), n(this, me, !1), n(this, $, 0), n(this, ve, 0), n(this, He, ue(t)), n(this, Be, mo(t)));
}, Li = new WeakSet(), Io = function(t) {
  if (!e(this, It) || e(this, me))
    return;
  let s = ue(t), a = mo(t);
  if (n(this, $, e(this, He) - s), n(this, ve, Math.abs(e(this, Be) - a)), t.type === "touchmove" && e(this, ve) > Math.abs(e(this, $)))
    return n(this, me, !0), n(this, $, 0), !1;
  t.cancelable && t.preventDefault(), n(this, Dt, e(this, $)), l(this, it, wt).call(this);
}, wi = new WeakSet(), Ao = function(t) {
  if (!(t.target.closest(".caroulix-arrow") || t.target.closest(".caroulix-indicators")) && (t.cancelable && t.preventDefault(), e(this, It))) {
    l(this, ge, ci).call(this, this.options.animationDuration);
    let s = this.el.getBoundingClientRect().width;
    n(this, It, !1);
    const a = s * 15 / 100;
    this.activeIndex !== e(this, y).length - 1 && e(this, $) > a ? this.next() : this.activeIndex !== 0 && e(this, $) < -a && this.prev(), n(this, $, 0), n(this, Dt, 0), l(this, it, wt).call(this), this.options.autoplay.enabled && this.play();
  }
}, Ei = new WeakSet(), So = function() {
  n(this, T, document.createElement("ul")), e(this, T).classList.add("caroulix-indicators"), this.options.indicators.isFlat && e(this, T).classList.add("caroulix-flat"), this.options.indicators.customClasses && (e(this, T).className = `${e(this, T).className} ${this.options.indicators.customClasses}`);
  for (let t = 0; t < e(this, y).length; t++) {
    const s = document.createElement("li");
    s.triggerRef = l(this, Di, ko).bind(this, t), s.addEventListener("click", s.triggerRef), e(this, T).appendChild(s);
  }
  this.el.appendChild(e(this, T));
}, Di = new WeakSet(), ko = function(t, s) {
  s.preventDefault(), t !== this.activeIndex && this.goTo(t);
}, Ve = new WeakSet(), Us = function() {
  Array.from(e(this, T).children).forEach((t) => t.removeAttribute("class")), e(this, T).children[this.activeIndex].classList.add("active");
}, ge = new WeakSet(), ci = function(t) {
  this.el.style.transitionDuration = t + "ms";
}, Xe = new WeakSet(), _s = function() {
  d(this.el, "caroulix.slide", {
    nextElement: e(this, y)[this.activeIndex],
    currentElement: e(this, y)[e(this, y).findIndex((t) => t.classList.contains("active"))]
  });
}, u(Eo, "getDefaultOptions", () => Er);
M({
  class: Eo,
  name: "Caroulix",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".caroulix"
  }
});
const Dr = {
  animationDuration: 300,
  sidenav: {
    activeClass: !0,
    activeWhenOpen: !0,
    autoClose: !0
  }
};
var Mt, be, $t, I, st, xe, qt, Pt, q, Ci, Oo, Ti, Mo, Ii, $o, Ye, Gs, Ai, qo, Fe, js, Si, Po;
class Ro extends z {
  constructor(t, s) {
    super();
    r(this, Ci);
    r(this, Ti);
    r(this, Ii);
    r(this, Ye);
    r(this, Ai);
    r(this, Fe);
    r(this, Si);
    u(this, "options");
    r(this, Mt, void 0);
    r(this, be, void 0);
    r(this, $t, !0);
    r(this, I, !1);
    r(this, st, !1);
    r(this, xe, !1);
    r(this, qt, void 0);
    r(this, Pt, void 0);
    r(this, q, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Collapsible", instance: this }), this.el = document.querySelector(t), this.options = O("Collapsible", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Collapsible init error", a);
    }
  }
  setup() {
    d(this.el, "collapsible.setup"), n(this, Mt, ai(this.el.id)), n(this, $t, !0), n(this, I, !!this.el.classList.contains("active")), n(this, st, !1), n(this, q, ""), n(this, xe, !1), this.setupListeners(), this.el.style.transitionDuration = this.options.animationDuration + "ms", l(this, Ti, Mo).call(this), n(this, xe, !!this.el.querySelector(".active")), this.options.sidenav.activeClass && l(this, Ii, $o).call(this), e(this, I) && this.open(), n(this, $t, !1);
  }
  setupListeners() {
    n(this, qt, l(this, Si, Po).bind(this)), e(this, Mt).forEach((t) => t.addEventListener("click", e(this, qt))), n(this, Pt, l(this, Ci, Oo).bind(this)), window.addEventListener("resize", e(this, Pt));
  }
  removeListeners() {
    e(this, Mt).forEach((t) => t.removeEventListener("click", e(this, qt))), n(this, qt, void 0), window.removeEventListener("resize", e(this, Pt)), n(this, Pt, void 0);
  }
  open() {
    e(this, I) && !e(this, $t) || (d(this.el, "collapsible.open"), n(this, I, !0), n(this, st, !0), this.el.style.display = "block", l(this, Fe, js).call(this), this.el.style.maxHeight = this.el.scrollHeight + "px", this.options.sidenav.activeWhenOpen && l(this, Ye, Gs).call(this, !0), this.options.sidenav.autoClose && l(this, Ai, qo).call(this), setTimeout(() => {
      n(this, st, !1);
    }, this.options.animationDuration));
  }
  close() {
    !e(this, I) || (d(this.el, "collapsible.close"), n(this, st, !0), this.el.style.maxHeight = "", l(this, Fe, js).call(this), this.options.sidenav.activeWhenOpen && l(this, Ye, Gs).call(this, !1), setTimeout(() => {
      this.el.style.display = "", n(this, st, !1), n(this, I, !1);
    }, this.options.animationDuration));
  }
}
Mt = new WeakMap(), be = new WeakMap(), $t = new WeakMap(), I = new WeakMap(), st = new WeakMap(), xe = new WeakMap(), qt = new WeakMap(), Pt = new WeakMap(), q = new WeakMap(), Ci = new WeakSet(), Oo = function() {
  e(this, I) && !e(this, q) && (this.el.style.maxHeight = this.el.scrollHeight + "px");
}, Ti = new WeakSet(), Mo = function() {
  const t = this.el.closest(".sidenav");
  t && (n(this, q, t.id), n(this, be, e(this, Mt).filter((s) => {
    var a;
    return ((a = s.closest(".sidenav")) == null ? void 0 : a.id) === t.id;
  })));
}, Ii = new WeakSet(), $o = function() {
  !e(this, xe) || !e(this, q) || (e(this, be).forEach((t) => t.classList.add("active")), this.el.classList.add("active"), this.open(), n(this, I, !0));
}, Ye = new WeakSet(), Gs = function(t) {
  !e(this, q) || e(this, be).forEach((s) => {
    t ? s.classList.add("active") : s.classList.remove("active");
  });
}, Ai = new WeakSet(), qo = function() {
  !e(this, $t) && e(this, q) && Ns("Collapsible").forEach((t) => {
    e(t, q) === e(this, q) && t.el.id !== this.el.id && t.close();
  });
}, Fe = new WeakSet(), js = function() {
  this.el.style.overflow = "hidden", setTimeout(() => {
    this.el.style.overflow = "";
  }, this.options.animationDuration);
}, Si = new WeakSet(), Po = function(t) {
  t.preventDefault(), !e(this, st) && (e(this, I) ? this.close() : this.open());
}, u(Ro, "getDefaultOptions", () => Dr);
M({
  class: Ro,
  name: "Collapsible",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".collapsible"
  }
});
const Cr = {
  overlay: !0,
  bodyScrolling: !1,
  animationDuration: 300
};
var Le, H, B, zt, we, N, Ee, ot, Ht, De, ki, Ho, Ue, Zs, Ri, Bo, _e, Ks, Oi, No;
class zo extends z {
  constructor(t, s) {
    super();
    r(this, ki);
    r(this, Ue);
    r(this, Ri);
    r(this, _e);
    r(this, Oi);
    u(this, "options");
    r(this, Le, void 0);
    r(this, H, !1);
    r(this, B, !1);
    r(this, zt, !1);
    r(this, we, !1);
    r(this, N, void 0);
    r(this, Ee, void 0);
    r(this, ot, void 0);
    r(this, Ht, void 0);
    r(this, De, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Sidenav", instance: this }), this.el = document.querySelector(t), this.options = O("Sidenav", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Sidenav init error", a);
    }
  }
  setup() {
    d(this.el, "sidenav.setup"), n(this, Le, ai(this.el.id)), n(this, H, !1), n(this, B, !1), n(this, De, window.innerWidth), n(this, zt, this.el.classList.contains("sidenav-fixed"));
    const t = Ns("Sidenav").find((s) => e(s, zt));
    n(this, we, t && t.el === this.el), n(this, N, document.querySelector('.layout, [class*="layout-"]')), e(this, N) && e(this, we) && l(this, Ue, Zs).call(this), this.setupListeners(), this.options.overlay && n(this, Ee, wo(
      e(this, H),
      this.options.overlay,
      this.el.id,
      this.options.animationDuration
    )), e(this, N) && e(this, zt) && l(this, Ri, Bo).call(this), this.el.style.transitionDuration = this.options.animationDuration + "ms";
  }
  setupListeners() {
    n(this, ot, l(this, Oi, No).bind(this)), e(this, Le).forEach((t) => t.addEventListener("click", e(this, ot))), n(this, Ht, l(this, ki, Ho).bind(this)), window.addEventListener("resize", e(this, Ht));
  }
  removeListeners() {
    e(this, Le).forEach((t) => t.removeEventListener("click", e(this, ot))), n(this, ot, void 0), window.removeEventListener("resize", e(this, Ht)), n(this, Ht, void 0);
  }
  destroy() {
    d(this.el, "component.destroy"), this.removeListeners(), e(this, N) && l(this, Ue, Zs).call(this);
    const t = v.findIndex((s) => s.instance.el.id === this.el.id);
    v.splice(t, 1);
  }
  open() {
    e(this, H) || e(this, B) || (d(this.el, "sidenav.open"), n(this, H, !0), n(this, B, !0), this.el.classList.add("active"), fi(
      this.options.overlay,
      e(this, Ee),
      e(this, ot),
      !0,
      this.options.animationDuration
    ), l(this, _e, Ks).call(this, !1), setTimeout(() => {
      n(this, B, !1), d(this.el, "sidenav.opened");
    }, this.options.animationDuration));
  }
  close() {
    !e(this, H) || e(this, B) || (n(this, B, !0), d(this.el, "sidenav.close"), this.el.classList.remove("active"), fi(
      this.options.overlay,
      e(this, Ee),
      e(this, ot),
      !1,
      this.options.animationDuration
    ), setTimeout(() => {
      l(this, _e, Ks).call(this, !0), n(this, H, !1), n(this, B, !1), d(this.el, "sidenav.closed");
    }, this.options.animationDuration));
  }
}
Le = new WeakMap(), H = new WeakMap(), B = new WeakMap(), zt = new WeakMap(), we = new WeakMap(), N = new WeakMap(), Ee = new WeakMap(), ot = new WeakMap(), Ht = new WeakMap(), De = new WeakMap(), ki = new WeakSet(), Ho = function(t) {
  const a = t.target.innerWidth;
  e(this, De) !== a && this.close(), n(this, De, a);
}, Ue = new WeakSet(), Zs = function() {
  ["layout-sidenav-right", "layout-sidenav-both"].forEach(
    (t) => e(this, N).classList.remove(t)
  );
}, Ri = new WeakSet(), Bo = function() {
  if (!e(this, we))
    return;
  const t = Array.from(document.querySelectorAll(".sidenav")).filter(
    (c) => c.classList.contains("sidenav-fixed")
  ), { sidenavsRight: s, sidenavsLeft: a } = t.reduce(
    (c, p) => (p.classList.contains("sidenav-right") ? c.sidenavsRight.push(p) : c.sidenavsLeft.push(p), c),
    { sidenavsRight: [], sidenavsLeft: [] }
  ), h = a.length > 0 && s.length > 0;
  s.length > 0 && !h ? e(this, N).classList.add("layout-sidenav-right") : h && e(this, N).classList.add("layout-sidenav-both");
}, _e = new WeakSet(), Ks = function(t) {
  this.options.bodyScrolling || (document.body.style.overflow = t ? "" : "hidden");
}, Oi = new WeakSet(), No = function(t) {
  t.preventDefault(), !(e(this, zt) && window.innerWidth >= 960) && (e(this, H) ? this.close() : this.open());
}, u(zo, "getDefaultOptions", () => Cr);
M({
  class: zo,
  name: "Sidenav",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".sidenav"
  }
});
const Tr = {
  animationDuration: 300,
  animationType: "none",
  hover: !1,
  autoClose: !0,
  preventViewport: !1,
  closeOnClick: !0
};
var W, Bt, V, P, Nt, Wt, Vt, Mi, Vo, $i, Xo, qi, Yo, Pi, Fo, Ge, Js;
class Wo extends z {
  constructor(t, s) {
    super();
    r(this, Mi);
    r(this, $i);
    r(this, qi);
    r(this, Pi);
    r(this, Ge);
    u(this, "options");
    r(this, W, void 0);
    r(this, Bt, void 0);
    r(this, V, !1);
    r(this, P, !1);
    r(this, Nt, void 0);
    r(this, Wt, void 0);
    r(this, Vt, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Dropdown", instance: this }), this.el = document.querySelector(t), this.options = O("Dropdown", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Dropdown init error", a);
    }
  }
  setup() {
    d(this.el, "dropdown.setup"), n(this, W, this.el.querySelector(".dropdown-content")), n(this, Bt, ai(this.el.id)[0]), n(this, V, !1), n(this, P, !!this.el.classList.contains("active")), this.options.hover ? this.el.classList.add("active-hover") : this.setupListeners(), this.options.preventViewport && this.el.classList.add("dropdown-vp"), l(this, Mi, Vo).call(this);
  }
  setupListeners() {
    this.options.hover || (n(this, Wt, l(this, qi, Yo).bind(this)), e(this, Bt).addEventListener("click", e(this, Wt)), n(this, Nt, l(this, $i, Xo).bind(this)), document.addEventListener("click", e(this, Nt), !0), n(this, Vt, l(this, Ge, Js).bind(this)), this.options.preventViewport && window.addEventListener("scroll", e(this, Vt)));
  }
  removeListeners() {
    this.options.hover || (e(this, Bt).removeEventListener("click", e(this, Wt)), n(this, Wt, void 0), document.removeEventListener("click", e(this, Nt), !0), n(this, Nt, void 0), this.options.preventViewport && window.removeEventListener("scroll", e(this, Vt)), n(this, Vt, void 0));
  }
  open() {
    e(this, P) || (d(this.el, "dropdown.open"), e(this, W).style.display = "flex", this.options.preventViewport && l(this, Ge, Js).call(this), setTimeout(() => {
      this.el.classList.add("active"), n(this, P, !0);
    }, 10), this.options.autoClose && l(this, Pi, Fo).call(this), this.options.animationType !== "none" ? (n(this, V, !0), setTimeout(() => {
      n(this, V, !1), d(this.el, "dropdown.opened");
    }, this.options.animationDuration)) : d(this.el, "dropdown.opened"));
  }
  close() {
    !e(this, P) || (d(this.el, "dropdown.close"), this.el.classList.remove("active"), this.options.animationType !== "none" ? (n(this, V, !0), setTimeout(() => {
      e(this, W).style.display = "", n(this, V, !1), n(this, P, !1), d(this.el, "dropdown.closed");
    }, this.options.animationDuration)) : (e(this, W).style.display = "", n(this, P, !1), d(this.el, "dropdown.closed")));
  }
}
W = new WeakMap(), Bt = new WeakMap(), V = new WeakMap(), P = new WeakMap(), Nt = new WeakMap(), Wt = new WeakMap(), Vt = new WeakMap(), Mi = new WeakSet(), Vo = function() {
  const t = ["none", "fade"];
  this.options.animationType = this.options.animationType.toLowerCase(), t.includes(this.options.animationType) || (this.options.animationType = "none"), this.options.animationType === "fade" && !this.options.hover && (e(this, W).style.transitionDuration = this.options.animationDuration + "ms", this.el.classList.add("dropdown-anim-fade"));
}, $i = new WeakSet(), Xo = function(t) {
  t.target === e(this, Bt) || e(this, V) || !e(this, P) || !this.options.closeOnClick && t.target.closest(".dropdown-content") || this.close();
}, qi = new WeakSet(), Yo = function(t) {
  t.preventDefault(), !e(this, V) && (e(this, P) ? this.close() : this.open());
}, Pi = new WeakSet(), Fo = function() {
  Ns("Dropdown").forEach((t) => {
    t.el.id !== this.el.id && t.close();
  });
}, Ge = new WeakSet(), Js = function() {
  const t = e(this, W).getBoundingClientRect(), s = t.height - (t.bottom - (window.innerHeight || document.documentElement.clientHeight)) - 10;
  e(this, W).style.maxHeight = s + "px";
}, u(Wo, "getDefaultOptions", () => Tr);
M({
  class: Wo,
  name: "Dropdown",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".dropdown"
  }
});
const Ir = {
  animationDuration: 300,
  hover: !0,
  direction: "top",
  position: "bottom-right",
  offsetX: "1rem",
  offsetY: "1.5rem"
};
var nt, X, Ce, ft, Xt, Yt, Ft, Ut, zi, _o, Hi, Go, Bi, jo, Ni, Zo, Wi, Ko;
class Uo extends z {
  constructor(t, s) {
    super();
    r(this, zi);
    r(this, Hi);
    r(this, Bi);
    r(this, Ni);
    r(this, Wi);
    u(this, "options");
    r(this, nt, !1);
    r(this, X, !1);
    r(this, Ce, void 0);
    r(this, ft, void 0);
    r(this, Xt, void 0);
    r(this, Yt, void 0);
    r(this, Ft, void 0);
    r(this, Ut, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Fab", instance: this }), this.el = document.querySelector(t), this.options = O("Fab", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Fab init error", a);
    }
  }
  setup() {
    d(this.el, "fab.setup"), n(this, nt, !1), n(this, X, !1), n(this, Ce, ai(this.el.id)[0]), n(this, ft, this.el.querySelector(".fab-menu")), l(this, zi, _o).call(this), this.setupListeners(), this.el.style.transitionDuration = this.options.animationDuration + "ms", l(this, Hi, Go).call(this);
  }
  setupListeners() {
    this.options.hover ? (n(this, Xt, this.open.bind(this)), n(this, Yt, this.close.bind(this)), this.el.addEventListener("mouseenter", e(this, Xt)), this.el.addEventListener("mouseleave", e(this, Yt))) : (n(this, Ut, l(this, Wi, Ko).bind(this)), this.el.addEventListener("click", e(this, Ut))), n(this, Ft, l(this, Ni, Zo).bind(this)), document.addEventListener("click", e(this, Ft), !0);
  }
  removeListeners() {
    this.options.hover ? (this.el.removeEventListener("mouseenter", e(this, Xt)), this.el.removeEventListener("mouseleave", e(this, Yt)), n(this, Xt, void 0), n(this, Yt, void 0)) : (this.el.removeEventListener("click", e(this, Ut)), n(this, Ut, void 0)), document.removeEventListener("click", e(this, Ft), !0), n(this, Ft, void 0);
  }
  open() {
    e(this, X) || (d(this.el, "fab.open"), n(this, nt, !0), n(this, X, !0), this.el.classList.add("active"), setTimeout(() => {
      n(this, nt, !1);
    }, this.options.animationDuration));
  }
  close() {
    !e(this, X) || (d(this.el, "fab.close"), n(this, nt, !0), n(this, X, !1), this.el.classList.remove("active"), setTimeout(() => {
      n(this, nt, !1);
    }, this.options.animationDuration));
  }
}
nt = new WeakMap(), X = new WeakMap(), Ce = new WeakMap(), ft = new WeakMap(), Xt = new WeakMap(), Yt = new WeakMap(), Ft = new WeakMap(), Ut = new WeakMap(), zi = new WeakSet(), _o = function() {
  ["right", "left", "top", "bottom"].includes(this.options.direction) || (this.options.direction = "top"), ["top-right", "top-left", "bottom-right", "bottom-left"].includes(this.options.position) || (this.options.position = "bottom-right");
}, Hi = new WeakSet(), Go = function() {
  this.options.position.split("-")[0] === "top" ? this.el.style.top = this.options.offsetY : this.el.style.bottom = this.options.offsetY, this.options.position.split("-")[1] === "right" ? this.el.style.right = this.options.offsetX : this.el.style.left = this.options.offsetX, (this.options.direction === "right" || this.options.direction === "left") && this.el.classList.add("fab-dir-x"), l(this, Bi, jo).call(this);
}, Bi = new WeakSet(), jo = function() {
  if (this.options.direction === "top" || this.options.direction === "bottom") {
    const t = e(this, Ce).clientHeight;
    this.options.direction === "top" ? e(this, ft).style.bottom = t + "px" : e(this, ft).style.top = t + "px";
  } else {
    const t = e(this, Ce).clientWidth;
    this.options.direction === "right" ? e(this, ft).style.left = t + "px" : e(this, ft).style.right = t + "px";
  }
}, Ni = new WeakSet(), Zo = function(t) {
  !this.el.contains(t.target) && e(this, X) && this.close();
}, Wi = new WeakSet(), Ko = function(t) {
  t.preventDefault(), !e(this, nt) && (e(this, X) ? this.close() : this.open());
}, u(Uo, "getDefaultOptions", () => Ir);
M({
  class: Uo,
  name: "Fab",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".fab:not(i)"
  }
});
const Ar = {
  animationDuration: 400,
  overlayClass: "grey dark-4",
  offset: 150,
  mobileOffset: 80,
  caption: ""
};
var _t, Gt, jt, Zt, Kt, w, Te, Ie, x, mt, vt, Y, je, F, yt, U, Vi, Qo, Xi, tn, Yi, en, Fi, sn, Ui, on, _i, nn, Gi, rn, ji, an, Zi, ln, Ki, hn, Ji, Qi, cn, ts, dn;
class Jo extends z {
  constructor(t, s) {
    super();
    r(this, Vi);
    r(this, Xi);
    r(this, Yi);
    r(this, Fi);
    r(this, Ui);
    r(this, _i);
    r(this, Gi);
    r(this, ji);
    r(this, Zi);
    r(this, Ki);
    r(this, Qi);
    r(this, ts);
    u(this, "options");
    r(this, _t, void 0);
    r(this, Gt, void 0);
    r(this, jt, void 0);
    r(this, Zt, void 0);
    r(this, Kt, void 0);
    r(this, w, void 0);
    r(this, Te, void 0);
    r(this, Ie, void 0);
    r(this, x, void 0);
    r(this, mt, 0);
    r(this, vt, 0);
    r(this, Y, !1);
    r(this, je, !1);
    r(this, F, void 0);
    r(this, yt, !1);
    r(this, U, !1);
    r(this, Ji, () => {
      e(this, Y) && this.close();
    });
    try {
      this.preventDbInstance(t), v.push({ type: "Lightbox", instance: this }), this.el = document.querySelector(t), this.options = O("Lightbox", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Lightbox init error", a);
    }
  }
  setup() {
    d(this.el, "lightbox.setup"), this.el.style.transitionDuration = this.options.animationDuration + "ms", n(this, F, lo([this.el])), this.setupListeners();
  }
  setupListeners() {
    n(this, _t, l(this, ts, dn).bind(this)), this.el.addEventListener("click", e(this, _t)), n(this, jt, l(this, Zi, ln).bind(this)), n(this, Zt, l(this, Ki, hn).bind(this)), n(this, Kt, e(this, Ji).bind(this)), n(this, Gt, l(this, ji, an).bind(this)), window.addEventListener("keyup", e(this, jt)), window.addEventListener("scroll", e(this, Zt)), window.addEventListener("resize", e(this, Kt)), this.el.addEventListener("transitionend", e(this, Gt));
  }
  removeListeners() {
    this.el.removeEventListener("click", e(this, _t)), this.el.removeEventListener("transitionend", e(this, Gt)), window.removeEventListener("keyup", e(this, jt)), window.removeEventListener("scroll", e(this, Zt)), window.removeEventListener("resize", e(this, Kt)), n(this, _t, void 0), n(this, jt, void 0), n(this, Zt, void 0), n(this, Kt, void 0), n(this, Gt, void 0);
  }
  open() {
    n(this, U, !0);
    let t, s;
    e(this, yt) ? t = s = e(this, F).getBoundingClientRect() : t = s = this.el.getBoundingClientRect(), n(this, yt, !1), l(this, Vi, Qo).call(this), l(this, Xi, tn).call(this);
    const a = window.innerHeight / 2, h = window.innerWidth / 2;
    n(this, x, t), this.el.style.width = e(this, x).width + "px", this.el.style.height = e(this, x).height + "px", this.el.style.top = "0", this.el.style.left = "0";
    const c = a + window.scrollY - (s.top + window.scrollY), p = h + window.scrollX - (s.left + window.scrollX);
    l(this, Ui, on).call(this), e(this, F).style.position = "relative", setTimeout(() => {
      d(this.el, "lightbox.open"), n(this, Y, !0), this.el.classList.contains("responsive-media") && (n(this, je, !0), this.el.classList.remove("responsive-media")), this.el.classList.add("active"), e(this, F).style.width = e(this, x).width + "px", e(this, F).style.height = e(this, x).height + "px", this.el.style.width = e(this, vt) + "px", this.el.style.height = e(this, mt) + "px", this.el.style.top = c - e(this, mt) / 2 + "px", this.el.style.left = p - e(this, vt) / 2 + "px";
    }, 50);
  }
  close(t) {
    (t == null ? void 0 : t.key) && t.key !== "Escape" || (n(this, Y, !1), n(this, yt, !0), n(this, U, !1), d(this.el, "lightbox.close"), l(this, Yi, en).call(this), this.el.style.position = "absolute", this.el.style.top = "0px", this.el.style.left = "0px", this.el.style.width = e(this, x).width + "px", this.el.style.height = e(this, x).height + "px");
  }
}
_t = new WeakMap(), Gt = new WeakMap(), jt = new WeakMap(), Zt = new WeakMap(), Kt = new WeakMap(), w = new WeakMap(), Te = new WeakMap(), Ie = new WeakMap(), x = new WeakMap(), mt = new WeakMap(), vt = new WeakMap(), Y = new WeakMap(), je = new WeakMap(), F = new WeakMap(), yt = new WeakMap(), U = new WeakMap(), Vi = new WeakSet(), Qo = function() {
  if (!e(this, w)) {
    if (l(this, _i, nn).call(this), n(this, w, document.createElement("div")), e(this, w).style.transitionDuration = this.options.animationDuration + "ms", e(this, w).className = "lightbox-overlay " + this.options.overlayClass, e(this, F).appendChild(e(this, w)), this.options.caption) {
      const t = document.createElement("p");
      t.className = "lightbox-caption", t.innerHTML = this.options.caption, e(this, w).appendChild(t);
    }
    n(this, Te, this.close.bind(this)), e(this, w).addEventListener("click", e(this, Te));
  }
}, Xi = new WeakSet(), tn = function() {
  setTimeout(() => {
    e(this, w).style.opacity = "1";
  }, 50);
}, Yi = new WeakSet(), en = function() {
  e(this, w).style.opacity = "0";
}, Fi = new WeakSet(), sn = function() {
  e(this, w).removeEventListener("click", e(this, Te)), e(this, w).remove(), n(this, w, null);
}, Ui = new WeakSet(), on = function() {
  const t = window.innerWidth >= 960 ? this.options.offset : this.options.mobileOffset;
  window.innerWidth / window.innerHeight >= e(this, x).width / e(this, x).height ? (n(this, mt, window.innerHeight - t), n(this, vt, e(this, mt) * e(this, x).width / e(this, x).height)) : (n(this, vt, window.innerWidth - t), n(this, mt, e(this, vt) * e(this, x).height / e(this, x).width));
}, _i = new WeakSet(), nn = function() {
  n(this, Ie, []);
  for (let t = this.el; t && t !== document; t = t.parentNode) {
    const s = window.getComputedStyle(t);
    (s.overflow === "hidden" || s.overflowX === "hidden" || s.overflowY === "hidden") && (e(this, Ie).push(t), t !== document.body && t.style.setProperty("overflow", "visible", "important"), document.body.style.overflowX = "hidden");
  }
}, Gi = new WeakSet(), rn = function() {
  e(this, Ie).forEach((t) => t.style.overflow = ""), document.body.style.overflowX = "";
}, ji = new WeakSet(), an = function(t) {
  !t.propertyName.includes("width") && !t.propertyName.includes("height") || (e(this, yt) ? (l(this, Qi, cn).call(this), n(this, yt, !1), n(this, Y, !1), d(this.el, "lightbox.closed")) : e(this, U) && (n(this, U, !1), d(this.el, "lightbox.opened")));
}, Zi = new WeakSet(), ln = function(t) {
  t.key === "Escape" && (e(this, U) || e(this, Y)) && this.close();
}, Ki = new WeakSet(), hn = function() {
  (e(this, Y) || e(this, U)) && this.close();
}, Ji = new WeakMap(), Qi = new WeakSet(), cn = function() {
  this.el.classList.remove("active"), l(this, Fi, sn).call(this), l(this, Gi, rn).call(this), e(this, je) && this.el.classList.add("responsive-media"), e(this, F).removeAttribute("style"), this.el.style.position = "", this.el.style.left = "", this.el.style.top = "", this.el.style.width = "", this.el.style.height = "", this.el.style.transform = "";
}, ts = new WeakSet(), dn = function() {
  if (e(this, U) || e(this, Y)) {
    this.close();
    return;
  }
  this.open();
}, u(Jo, "getDefaultOptions", () => Ar);
M({
  class: Jo,
  name: "Lightbox",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".lightbox"
  }
});
const Sr = {
  overlay: !0,
  bodyScrolling: !1,
  animationDuration: 400
};
var Ae, _, rt, at, Ze, Qs, es, un, is, fn;
class pn extends z {
  constructor(t, s) {
    super();
    r(this, Ze);
    r(this, es);
    r(this, is);
    u(this, "options");
    u(this, "overlayElement");
    r(this, Ae, void 0);
    r(this, _, !1);
    r(this, rt, !1);
    r(this, at, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Modal", instance: this }), this.el = document.querySelector(t), this.options = O("Modal", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Modal init error", a);
    }
  }
  setup() {
    d(this.el, "modal.setup"), n(this, Ae, ai(this.el.id)), n(this, _, !!this.el.classList.contains("active")), n(this, rt, !1), this.setupListeners(), this.options.overlay && (this.overlayElement = wo(
      e(this, _),
      this.options.overlay,
      this.el.id,
      this.options.animationDuration
    )), this.el.style.transitionDuration = this.options.animationDuration + "ms", this.el.style.animationDuration = this.options.animationDuration + "ms";
  }
  setupListeners() {
    n(this, at, l(this, is, fn).bind(this)), e(this, Ae).forEach((t) => t.addEventListener("click", e(this, at)));
  }
  removeListeners() {
    e(this, Ae).forEach((t) => t.removeEventListener("click", e(this, at))), n(this, at, void 0);
  }
  open() {
    e(this, _) || (d(this.el, "modal.open"), n(this, _, !0), n(this, rt, !0), l(this, es, un).call(this), this.el.style.display = "block", fi(
      this.options.overlay,
      this.overlayElement,
      e(this, at),
      !0,
      this.options.animationDuration
    ), l(this, Ze, Qs).call(this, !1), setTimeout(() => {
      this.el.classList.add("active");
    }, 50), setTimeout(() => {
      n(this, rt, !1), d(this.el, "modal.opened");
    }, this.options.animationDuration));
  }
  close() {
    !e(this, _) || (d(this.el, "modal.close"), n(this, rt, !0), this.el.classList.remove("active"), fi(
      this.options.overlay,
      this.overlayElement,
      e(this, at),
      !1,
      this.options.animationDuration
    ), setTimeout(() => {
      this.el.style.display = "", n(this, rt, !1), n(this, _, !1), l(this, Ze, Qs).call(this, !0), d(this.el, "modal.closed");
    }, this.options.animationDuration));
  }
}
Ae = new WeakMap(), _ = new WeakMap(), rt = new WeakMap(), at = new WeakMap(), Ze = new WeakSet(), Qs = function(t) {
  this.options.bodyScrolling || (document.body.style.overflow = t ? "" : "hidden");
}, es = new WeakSet(), un = function() {
  const t = document.querySelectorAll(".modal.active").length + 1;
  this.options.overlay && (this.overlayElement.style.zIndex = String(800 + t * 10 - 2)), this.el.style.zIndex = String(800 + t * 10);
}, is = new WeakSet(), fn = function(t) {
  t.preventDefault(), !e(this, rt) && (e(this, _) ? this.close() : this.open());
}, u(pn, "getDefaultOptions", () => Sr);
M({
  class: pn,
  name: "Modal",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".modal"
  }
});
const kr = {
  animationDuration: 300,
  animationType: "none",
  disableActiveBar: !1,
  caroulix: {
    animationDuration: 300,
    backToOpposite: !1,
    enableTouch: !1,
    autoplay: {
      enabled: !1
    }
  }
};
var A, g, S, E, Se, ke, Jt, Qt, te, gt, ee, G, ie, Re, se, k, ss, vn, os, yn, ns, gn, rs, bn, as, xn, Ke, to, Je, eo, ls, Ln, hs, wn, cs, En, ds, Dn, ps, Cn;
class mn extends z {
  constructor(t, s) {
    super();
    r(this, ss);
    r(this, os);
    r(this, ns);
    r(this, rs);
    r(this, as);
    r(this, Ke);
    r(this, Je);
    r(this, ls);
    r(this, hs);
    r(this, cs);
    r(this, ds);
    r(this, ps);
    u(this, "options");
    r(this, A, void 0);
    r(this, g, void 0);
    r(this, S, void 0);
    r(this, E, 0);
    r(this, Se, void 0);
    r(this, ke, void 0);
    r(this, Jt, void 0);
    r(this, Qt, void 0);
    r(this, te, void 0);
    r(this, gt, void 0);
    r(this, ee, void 0);
    r(this, G, void 0);
    r(this, ie, void 0);
    r(this, Re, !1);
    r(this, se, void 0);
    r(this, k, !1);
    try {
      this.preventDbInstance(t), v.push({ type: "Tab", instance: this }), this.el = document.querySelector(t), this.options = O("Tab", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Tab init error", a);
    }
  }
  setup() {
    d(this.el, "tab.setup"), ["none", "slide"].includes(this.options.animationType) || (this.options.animationType = "none"), n(this, k, !1), n(this, A, this.el.querySelector(".tab-arrow")), n(this, g, this.el.querySelectorAll(".tab-menu .tab-link")), n(this, S, this.el.querySelector(".tab-menu")), n(this, E, 0), n(this, G, l(this, ns, gn).call(this)), e(this, A) && (l(this, Je, eo).call(this), n(this, Se, this.el.querySelector(".tab-arrow .tab-prev")), n(this, ke, this.el.querySelector(".tab-arrow .tab-next"))), this.setupListeners(), e(this, S).style.transitionDuration = this.options.animationDuration + "ms", this.options.animationType === "slide" ? l(this, as, xn).call(this) : this.updateActiveElement();
  }
  setupListeners() {
    e(this, g).forEach((t) => {
      t.listenerRef = l(this, cs, En).bind(this, t), t.addEventListener("click", t.listenerRef);
    }), n(this, ee, l(this, ss, vn).bind(this)), window.addEventListener("resize", e(this, ee)), e(this, A) && (n(this, te, l(this, Je, eo).bind(this)), window.addEventListener("resize", e(this, te)), n(this, Jt, l(this, ls, Ln).bind(this)), n(this, Qt, l(this, hs, wn).bind(this)), e(this, Se).addEventListener("click", e(this, Jt)), e(this, ke).addEventListener("click", e(this, Qt)));
  }
  removeListeners() {
    e(this, g).forEach((t) => {
      t.removeEventListener("click", t.listenerRef), t.listenerRef = void 0;
    }), window.removeEventListener("resize", e(this, ee)), n(this, ee, void 0), e(this, A) && (window.removeEventListener("resize", e(this, te)), n(this, te, void 0), e(this, Se).removeEventListener("click", e(this, Jt)), e(this, ke).removeEventListener("click", e(this, Qt)), n(this, Jt, void 0), n(this, Qt, void 0)), e(this, gt) && (this.el.removeEventListener("ax.caroulix.slide", e(this, gt)), n(this, gt, void 0));
  }
  select(t) {
    if (e(this, k))
      return;
    n(this, k, !0);
    const s = this.el.querySelector('.tab-menu a[href="#' + t + '"]');
    if (n(this, E, Array.from(e(this, g)).findIndex((a) => a.children[0] === s)), d(s, "tab.select", { currentIndex: e(this, E) }), l(this, Ke, to).call(this, s.parentElement), e(this, Re)) {
      e(this, G).forEach((h) => h.id === t ? h.classList.add("active") : "");
      const a = pe("Caroulix");
      n(this, se, new a(
        "#" + e(this, ie).id,
        this.options.caroulix,
        this.el,
        !0
      )), n(this, gt, l(this, os, yn).bind(this)), this.el.addEventListener("ax.caroulix.slide", e(this, gt)), n(this, Re, !1), n(this, k, !1);
      return;
    }
    if (this.options.animationType === "slide") {
      const a = e(this, G).findIndex((h) => h.id === t);
      e(this, se).goTo(a), setTimeout(() => {
        n(this, k, !1);
      }, this.options.animationDuration);
    } else
      l(this, rs, bn).call(this), e(this, G).forEach((a) => {
        a.id === t && (a.style.display = "block");
      }), n(this, k, !1);
  }
  updateActiveElement() {
    let t;
    e(this, g).forEach((a, h) => {
      a.classList.contains("active") && (t = a, n(this, E, h));
    }), t || (t = e(this, g).item(0), n(this, E, 0));
    const s = t.children[0].getAttribute("href");
    this.select(s.split("#")[1]);
  }
  prev(t = 1) {
    if (e(this, k))
      return;
    const s = l(this, ds, Dn).call(this, t);
    n(this, E, s), d(this.el, "tab.prev", { step: t });
    const a = e(this, g)[s].children[0].getAttribute("href");
    this.select(a.split("#")[1]);
  }
  next(t = 1) {
    if (e(this, k))
      return;
    const s = l(this, ps, Cn).call(this, t);
    n(this, E, s), d(this.el, "tab.next", { step: t });
    const a = e(this, g)[s].children[0].getAttribute("href");
    this.select(a.split("#")[1]);
  }
}
A = new WeakMap(), g = new WeakMap(), S = new WeakMap(), E = new WeakMap(), Se = new WeakMap(), ke = new WeakMap(), Jt = new WeakMap(), Qt = new WeakMap(), te = new WeakMap(), gt = new WeakMap(), ee = new WeakMap(), G = new WeakMap(), ie = new WeakMap(), Re = new WeakMap(), se = new WeakMap(), k = new WeakMap(), ss = new WeakSet(), vn = function() {
  this.updateActiveElement();
  for (let t = 100; t < 500; t += 100)
    setTimeout(() => {
      this.updateActiveElement();
    }, t);
}, os = new WeakSet(), yn = function() {
  e(this, E) !== e(this, se).activeIndex && (n(this, E, e(this, se).activeIndex), l(this, Ke, to).call(this, e(this, g)[e(this, E)]));
}, ns = new WeakSet(), gn = function() {
  return Array.from(e(this, g)).map((t) => {
    const s = t.children[0].getAttribute("href");
    return this.el.querySelector(s);
  });
}, rs = new WeakSet(), bn = function() {
  e(this, G).forEach((t) => t.style.display = "none");
}, as = new WeakSet(), xn = function() {
  e(this, G).forEach((s) => s.classList.add("caroulix-item")), n(this, ie, lo(e(this, G))), e(this, ie).classList.add("caroulix");
  const t = Math.random().toString().split(".")[1];
  e(this, ie).id = "tab-caroulix-" + t, n(this, Re, !0), this.options.animationDuration !== 300 && (this.options.caroulix.animationDuration = this.options.animationDuration), this.updateActiveElement();
}, Ke = new WeakSet(), to = function(t) {
  if (e(this, g).forEach((s) => s.classList.remove("active")), !this.options.disableActiveBar) {
    const s = t.getBoundingClientRect(), a = s.left, h = e(this, S).getBoundingClientRect().left, c = a - h + e(this, S).scrollLeft, p = s.width, m = e(this, S).clientWidth - c - p;
    e(this, S).style.setProperty(J("tab-bar-left-offset"), Math.floor(c) + "px"), e(this, S).style.setProperty(J("tab-bar-right-offset"), Math.ceil(m) + "px");
  }
  t.classList.add("active");
}, Je = new WeakSet(), eo = function() {
  const t = Array.from(e(this, g)).reduce((a, h) => (a += h.clientWidth, a), 0), s = e(this, A).clientWidth;
  t > s ? e(this, A).classList.contains("tab-arrow-show") || e(this, A).classList.add("tab-arrow-show") : e(this, A).classList.contains("tab-arrow-show") && e(this, A).classList.remove("tab-arrow-show");
}, ls = new WeakSet(), Ln = function(t) {
  t.preventDefault(), e(this, S).scrollLeft -= 40;
}, hs = new WeakSet(), wn = function(t) {
  t.preventDefault(), e(this, S).scrollLeft += 40;
}, cs = new WeakSet(), En = function(t, s) {
  if (s.preventDefault(), e(this, k) || t.classList.contains("active"))
    return;
  const a = t.children[0].getAttribute("href");
  this.select(a.split("#")[1]);
}, ds = new WeakSet(), Dn = function(t) {
  let s = 0, a = e(this, E);
  for (let h = 0; h < t; h++)
    a > 0 ? (s = a - 1, a--) : (a = e(this, g).length - 1, s = a);
  return s;
}, ps = new WeakSet(), Cn = function(t) {
  let s = 0, a = e(this, E);
  for (let h = 0; h < t; h++)
    a < e(this, g).length - 1 ? (s = a + 1, a++) : (a = 0, s = a);
  return s;
}, u(mn, "getDefaultOptions", () => kr);
M({
  class: mn,
  name: "Tab",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".tab"
  }
});
const Rr = {
  offset: 200,
  linkSelector: "a",
  classes: "active",
  auto: {
    enabled: !1,
    classes: "",
    selector: ""
  }
};
var bt, lt, oe, j, us, In, fs, An, ms, Sn, vs, kn, ys, Rn, Qe, io;
class Tn extends z {
  constructor(t, s) {
    super();
    r(this, us);
    r(this, fs);
    r(this, ms);
    r(this, vs);
    r(this, ys);
    r(this, Qe);
    u(this, "options");
    r(this, bt, void 0);
    r(this, lt, void 0);
    r(this, oe, void 0);
    r(this, j, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "ScrollSpy", instance: this }), this.el = document.querySelector(t), this.options = O("ScrollSpy", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] ScrollSpy init error", a);
    }
  }
  setup() {
    d(this.el, "scrollspy.setup"), this.options.auto.enabled ? l(this, fs, An).call(this) : l(this, us, In).call(this), typeof this.options.classes == "string" && (this.options.classes = this.options.classes.split(" ")), n(this, bt, ""), this.setupListeners(), l(this, Qe, io).call(this);
  }
  setupListeners() {
    n(this, lt, l(this, Qe, io).bind(this)), window.addEventListener("scroll", e(this, lt)), window.addEventListener("resize", e(this, lt));
  }
  removeListeners() {
    window.removeEventListener("scroll", e(this, lt)), window.removeEventListener("resize", e(this, lt)), n(this, lt, void 0);
  }
}
bt = new WeakMap(), lt = new WeakMap(), oe = new WeakMap(), j = new WeakMap(), us = new WeakSet(), In = function() {
  n(this, oe, Array.from(this.el.querySelectorAll(this.options.linkSelector))), n(this, j, e(this, oe).map((t) => document.querySelector(t.getAttribute("href"))));
}, fs = new WeakSet(), An = function() {
  n(this, j, Array.from(document.querySelectorAll(this.options.auto.selector))), n(this, oe, e(this, j).map((t) => {
    const s = document.createElement("a");
    return s.className = this.options.auto.classes, s.setAttribute("href", "#" + t.id), s.innerHTML = t.innerHTML, this.el.appendChild(s), s;
  }));
}, ms = new WeakSet(), Sn = function() {
  const t = window.scrollY, s = window.scrollX, a = window.innerWidth, h = window.innerHeight, c = t + this.options.offset;
  return h + t >= document.body.offsetHeight - 2 ? e(this, j)[e(this, j).length - 1] : e(this, j).find((p) => {
    const m = p.getBoundingClientRect();
    return m.top + t >= t && m.left + s >= s && m.right <= a && m.bottom <= h && m.top + t <= c;
  });
}, vs = new WeakSet(), kn = function() {
  !e(this, bt) || this.options.classes.forEach((t) => e(this, bt).classList.remove(t));
}, ys = new WeakSet(), Rn = function() {
  const t = window.scrollY;
  return e(this, j).reduce((s, a) => {
    const h = a.getBoundingClientRect().top + t, c = s.getBoundingClientRect().top + t;
    return h > t + this.options.offset ? s : Math.abs(h - t) < Math.abs(c - t) ? a : s;
  });
}, Qe = new WeakSet(), io = function() {
  let t = l(this, ms, Sn).call(this);
  t || (t = l(this, ys, Rn).call(this));
  const s = e(this, oe).find((a) => a.getAttribute("href").split("#")[1] === t.id);
  s !== e(this, bt) && (d(this.el, "scrollspy.update"), l(this, vs, kn).call(this), this.options.classes.forEach((a) => s.classList.add(a)), n(this, bt, s));
}, u(Tn, "getDefaultOptions", () => Rr);
M({
  class: Tn,
  name: "ScrollSpy",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".scrollspy"
  }
});
const Or = {
  animationDuration: 400,
  duration: 4e3,
  classes: "",
  position: "right",
  direction: "top",
  mobileDirection: "bottom",
  offset: { x: "5%", y: "0%", mobileX: "10%", mobileY: "0%" },
  isClosable: !1,
  isSwipeable: !0,
  closableContent: "x",
  loading: {
    enabled: !0,
    border: "2px solid #E2E2E2"
  }
};
var Oe, Z, K, ti, ei, Me, ne, re, gs, On, bs, Mn, xs, $n, Ls, qn, ws, Pn, Es, zn, Ds, Hn, Cs, Bn, Ts, Nn, Is, Wn, As, Vn, Ss, Xn, ae, Pe;
const fo = class {
  constructor(i, t) {
    r(this, gs);
    r(this, bs);
    r(this, xs);
    r(this, Ls);
    r(this, ws);
    r(this, Es);
    r(this, Ds);
    r(this, Cs);
    r(this, Ts);
    r(this, Is);
    r(this, As);
    r(this, Ss);
    r(this, ae);
    u(this, "options");
    u(this, "id");
    r(this, Oe, void 0);
    r(this, Z, void 0);
    r(this, K, void 0);
    r(this, ti, void 0);
    r(this, ei, void 0);
    r(this, Me, void 0);
    r(this, ne, void 0);
    r(this, re, void 0);
    if (Ns("Toast").length > 0) {
      console.error("[Axentix] Toast: Don't try to create multiple toast instances");
      return;
    }
    v.push({ type: "Toast", instance: this }), this.id = Math.random().toString().split(".")[1], n(this, Oe, i), this.options = ui(fo.getDefaultOptions(), t), n(this, K, ho()), this.options.position = this.options.position.toLowerCase(), this.options.direction = this.options.direction.toLowerCase(), this.options.mobileDirection = this.options.mobileDirection.toLowerCase(), n(this, Z, {});
  }
  destroy() {
    const i = v.findIndex((t) => t.instance.id === this.id);
    v.splice(i, 1);
  }
  show() {
    try {
      Object.keys(e(this, Z)).includes(this.options.position) || l(this, gs, On).call(this), l(this, Ss, Xn).call(this);
    } catch (i) {
      console.error("[Axentix] Toast error", i);
    }
  }
  change(i, t) {
    n(this, Oe, i), this.options = ui(this.options, t);
  }
};
let di = fo;
Oe = new WeakMap(), Z = new WeakMap(), K = new WeakMap(), ti = new WeakMap(), ei = new WeakMap(), Me = new WeakMap(), ne = new WeakMap(), re = new WeakMap(), gs = new WeakSet(), On = function() {
  let i = document.createElement("div");
  ["right", "left"].includes(this.options.position) || (this.options.position = "right"), this.options.position === "right" ? i.style.right = this.options.offset.x : i.style.left = this.options.offset.x;
  const s = ["bottom", "top"];
  s.includes(this.options.direction) || (this.options.direction = "top"), this.options.direction === "top" ? i.style.top = this.options.offset.y : i.style.bottom = this.options.offset.y, s.includes(this.options.mobileDirection) || (this.options.mobileDirection = "bottom"), i.style.setProperty(
    J("toaster-m-width"),
    100 - this.options.offset.mobileX.slice(0, -1) + "%"
  ), i.style.setProperty(J("toaster-m-offset"), this.options.offset.mobileY), this.options.loading.enabled && i.style.setProperty(J("toast-loading-border"), this.options.loading.border), i.className = `toaster toaster-${this.options.position} toast-${this.options.direction} toaster-m-${this.options.mobileDirection}`, e(this, Z)[this.options.position] = i, document.body.appendChild(i);
}, bs = new WeakSet(), Mn = function() {
  for (const i in e(this, Z)) {
    let t = e(this, Z)[i];
    t.childElementCount <= 0 && (t.remove(), delete e(this, Z)[i]);
  }
}, xs = new WeakSet(), $n = function(i) {
  setTimeout(() => {
    d(i, "toast.show"), this.options.loading.enabled && (i.classList.add("toast-loading"), i.style.setProperty(J("toast-loading-duration"), this.options.duration + "ms")), i.classList.add("toast-animated"), setTimeout(() => {
      d(i, "toast.shown"), this.options.loading.enabled && i.classList.add("toast-load");
    }, this.options.animationDuration);
  }, 50);
}, Ls = new WeakSet(), qn = function(i) {
  setTimeout(() => {
    d(i, "toast.hide"), l(this, ae, Pe).call(this, i);
  }, this.options.duration + this.options.animationDuration);
}, ws = new WeakSet(), Pn = function(i) {
  i.style.transitionTimingFunction = "cubic-bezier(0.445, 0.05, 0.55, 0.95)", i.style.paddingTop = "0", i.style.paddingBottom = "0", i.style.margin = "0", i.style.height = "0";
}, Es = new WeakSet(), zn = function(i) {
  n(this, ti, l(this, Cs, Bn).bind(this)), n(this, ei, l(this, Ts, Nn).bind(this)), n(this, Me, l(this, Is, Wn).bind(this)), i.addEventListener(
    `${e(this, K)}${e(this, K) === "touch" ? "start" : "down"}`,
    e(this, ti)
  ), i.addEventListener(`${e(this, K)}move`, e(this, ei)), i.addEventListener(
    `${e(this, K)}${e(this, K) === "touch" ? "end" : "up"}`,
    e(this, Me)
  ), i.addEventListener(
    e(this, K) === "pointer" ? "pointerleave" : "mouseleave",
    e(this, Me)
  );
}, Ds = new WeakSet(), Hn = function(i) {
  i.querySelectorAll("[data-toast-close]").forEach((t) => {
    t.addEventListener("click", () => {
      l(this, ae, Pe).call(this, i);
    });
  });
}, Cs = new WeakSet(), Bn = function(i) {
  if (i.target.closest(".toast-trigger"))
    return;
  const t = i.target.closest(".toast");
  t.dataset.closing || (n(this, re, ue(i)), n(this, ne, !0), t.style.transitionProperty = "height, margin, padding, transform, box-shadow");
}, Ts = new WeakSet(), Nn = function(i) {
  if (!e(this, ne))
    return;
  const t = i.target.closest(".toast"), s = t.getBoundingClientRect(), a = Math.abs(ue(i) - e(this, re));
  t.style.left = ue(i) - e(this, re) + "px", t.style.opacity = a < s.width ? (0.99 - a / s.width).toString() : "0.01";
}, Is = new WeakSet(), Wn = function(i) {
  if (!e(this, ne))
    return;
  i.cancelable && i.preventDefault(), n(this, ne, !1);
  const t = i.target.closest(".toast");
  t.style.transitionProperty = "height, margin, opacity, padding, transform, box-shadow, left", Math.abs(ue(i) - e(this, re)) > t.getBoundingClientRect().width / 2 ? (l(this, ae, Pe).call(this, t), t.dataset.closing = "true") : (t.style.left = "0px", t.style.opacity = 1);
}, As = new WeakSet(), Vn = function(i) {
  l(this, Es, zn).call(this, i);
}, Ss = new WeakSet(), Xn = function() {
  let i = document.createElement("div");
  if (i.className = "toast shadow-1 " + this.options.classes, i.innerHTML = e(this, Oe), i.style.transitionDuration = this.options.animationDuration + "ms", this.options.isClosable) {
    let s = document.createElement("div");
    s.className = "toast-trigger", s.innerHTML = this.options.closableContent, s.listenerRef = l(this, ae, Pe).bind(this, i, s), s.addEventListener("click", s.listenerRef), i.appendChild(s);
  }
  this.options.isSwipeable && l(this, As, Vn).call(this, i), l(this, xs, $n).call(this, i), l(this, Ds, Hn).call(this, i), e(this, Z)[this.options.position].appendChild(i), l(this, Ls, qn).call(this, i);
  const t = i.clientHeight;
  i.style.height = t + "px";
}, ae = new WeakSet(), Pe = function(i, t, s) {
  if (i.isAnimated)
    return;
  let a = 1;
  s && (s.preventDefault(), a = 0, this.options.isClosable && t.removeEventListener("click", t.listenerRef)), i.style.opacity = "0", i.isAnimated = !0;
  const h = a * this.options.animationDuration + this.options.animationDuration;
  setTimeout(() => {
    l(this, ws, Pn).call(this, i);
  }, h / 2), setTimeout(() => {
    i.remove(), d(i, "toast.remove"), l(this, bs, Mn).call(this);
  }, h * 1.45);
}, u(di, "getDefaultOptions", () => Or);
M({
  class: di,
  name: "Toast"
});
const Mr = {
  content: "",
  animationDelay: 0,
  offset: "10px",
  animationDuration: 200,
  classes: "grey dark-4 light-shadow-2 p-2",
  position: "top"
};
var f, $e, le, he, ce, de, D, ht, ii, so, ks, Fn, Rs, Un, Os, _n, Ms, Gn;
class Yn extends z {
  constructor(t, s) {
    super();
    r(this, ii);
    r(this, ks);
    r(this, Rs);
    r(this, Os);
    r(this, Ms);
    u(this, "options");
    r(this, f, void 0);
    r(this, $e, void 0);
    r(this, le, void 0);
    r(this, he, void 0);
    r(this, ce, void 0);
    r(this, de, void 0);
    r(this, D, void 0);
    r(this, ht, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Tooltip", instance: this }), this.el = document.querySelector(t), this.options = O("Tooltip", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Tooltip init error", a);
    }
  }
  setup() {
    if (!this.options.content)
      return console.error(`Tooltip #${this.el.id} : empty content.`);
    d(this.el, "tooltip.setup"), this.options.position = this.options.position.toLowerCase(), document.querySelectorAll(".tooltip").forEach((s) => {
      s.dataset.tooltipId && s.dataset.tooltipId === this.el.id && n(this, f, s);
    }), e(this, f) || n(this, f, document.createElement("div")), e(this, f).dataset.tooltipId !== this.el.id && (e(this, f).dataset.tooltipId = this.el.id), l(this, ii, so).call(this), document.body.appendChild(e(this, f)), n(this, $e, ["right", "left", "top", "bottom"]), e(this, $e).includes(this.options.position) || (this.options.position = "top"), this.setupListeners(), this.updatePosition(), e(this, f).style.display = "none";
  }
  setupListeners() {
    n(this, le, l(this, Os, _n).bind(this)), n(this, he, l(this, Ms, Gn).bind(this)), n(this, ce, this.updatePosition.bind(this)), this.el.addEventListener("mouseenter", e(this, le)), this.el.addEventListener("mouseleave", e(this, he)), window.addEventListener("resize", e(this, ce));
  }
  removeListeners() {
    this.el.removeEventListener("mouseenter", e(this, le)), this.el.removeEventListener("mouseleave", e(this, he)), window.removeEventListener("resize", e(this, ce)), n(this, le, void 0), n(this, he, void 0), n(this, ce, void 0);
  }
  updatePosition() {
    n(this, D, this.el.getBoundingClientRect()), l(this, ks, Fn).call(this), n(this, ht, e(this, f).getBoundingClientRect()), l(this, Rs, Un).call(this);
  }
  show() {
    e(this, f).style.display = "block", this.updatePosition(), clearTimeout(e(this, de)), n(this, de, setTimeout(() => {
      d(this.el, "tooltip.show");
      const t = this.options.position == "top" || this.options.position == "left" ? "-" : "", s = this.options.position == "top" || this.options.position == "bottom" ? "Y" : "X";
      e(this, f).style.transform = `translate${s}(${t}${this.options.offset})`, e(this, f).style.opacity = "1";
    }, this.options.animationDelay));
  }
  hide() {
    d(this.el, "tooltip.hide"), clearTimeout(e(this, de)), e(this, f).style.transform = "translate(0)", e(this, f).style.opacity = "0", n(this, de, setTimeout(() => {
      e(this, f).style.display = "none";
    }, this.options.animationDuration));
  }
  change(t) {
    this.options = O("Tooltip", t, this.el), e(this, $e).includes(this.options.position) || (this.options.position = "top"), l(this, ii, so).call(this), this.updatePosition();
  }
}
f = new WeakMap(), $e = new WeakMap(), le = new WeakMap(), he = new WeakMap(), ce = new WeakMap(), de = new WeakMap(), D = new WeakMap(), ht = new WeakMap(), ii = new WeakSet(), so = function() {
  e(this, f).style.transform = "translate(0)", e(this, f).style.opacity = "0", e(this, f).className = "tooltip " + this.options.classes, e(this, f).style.transitionDuration = this.options.animationDuration + "ms", e(this, f).innerHTML = this.options.content;
}, ks = new WeakSet(), Fn = function() {
  if (this.options.position == "top" || this.options.position == "bottom") {
    const s = this.options.position === "top" ? e(this, D).top : e(this, D).top + e(this, D).height;
    e(this, f).style.top = s + "px";
  } else
    this.options.position == "right" && (e(this, f).style.left = e(this, D).left + e(this, D).width + "px");
}, Rs = new WeakSet(), Un = function() {
  this.options.position == "top" || this.options.position == "bottom" ? e(this, f).style.left = e(this, D).left + e(this, D).width / 2 - e(this, ht).width / 2 + "px" : e(this, f).style.top = e(this, D).top + e(this, D).height / 2 - e(this, ht).height / 2 + "px", this.options.position == "top" ? e(this, f).style.top = e(this, ht).top - e(this, ht).height + "px" : this.options.position == "left" && (e(this, f).style.left = e(this, D).left - e(this, ht).width + "px");
  const s = window.scrollY, a = parseFloat(e(this, f).style.top);
  this.options.position === "top" ? e(this, f).style.top = s * 2 + a + "px" : e(this, f).style.top = s + a + "px";
}, Os = new WeakSet(), _n = function(t) {
  t.preventDefault(), this.show();
}, Ms = new WeakSet(), Gn = function(t) {
  t.preventDefault(), this.hide();
}, u(Yn, "getDefaultOptions", () => Mr);
M({
  class: Yn,
  name: "Tooltip",
  dataDetection: !0
});
let pi = "";
const po = {}, uo = {}, $r = (o) => {
  const i = co(), t = document.createElement("div"), s = document.createElement("div"), a = o.tagName.toLowerCase();
  return o.setAttribute("data-waves-id", i), s.classList.add("data-waves-item-inner"), s.setAttribute("data-waves-id", i), t.classList.add("data-waves-box"), t.setAttribute("data-waves-id", i), t.appendChild(s), po[i] = o, uo[i] = t, ["img", "video"].includes(a) ? o.parentNode.appendChild(t) : o.appendChild(t), t;
}, qr = ({ id: o, size: i, x: t, y: s, container: a, item: h, target: c }, p) => {
  const m = document.createElement("span");
  let C = `height:${i}px;
           width:${i}px;
           left:${t}px;
           top:${s}px;`;
  return p && (C += `${J("waves-color")}: ${p}`), m.setAttribute("data-waves-id", o), m.classList.add("data-waves-item"), m.setAttribute("style", C), m.addEventListener(
    "animationend",
    () => {
      a.removeChild(m), !a.children.length && h && (h.parentNode && h.parentNode.removeChild(h), c.removeAttribute("data-waves-id"), delete uo[o], delete po[o]);
    },
    { once: !0 }
  ), m;
}, Pr = (o, i, t, s) => {
  const { top: a, left: h, width: c, height: p } = s.getBoundingClientRect(), m = o - h, C = i - a;
  let tt = uo[t];
  tt || (tt = $r(s)), t = tt.getAttribute("data-waves-id") || co();
  const Lt = tt.children[0], hr = li(li(Math.max(h + c - o, o - h), 2) + li(Math.max(a + p - i, i - a), 2), 0.5) * 2;
  return { id: t, size: hr, x: m, y: C, container: Lt, item: tt, target: s };
}, zr = (o, i) => {
  const { left: t, top: s, width: a, height: h } = o.getBoundingClientRect(), { left: c, top: p } = i.getBoundingClientRect(), { borderRadius: m, zIndex: C } = window.getComputedStyle(o);
  return `left:${t - c}px;
          top:${s - p}px;
          height:${h}px;
          width:${a}px;
          border-radius:${m || "0"};
          z-index:${C};`;
}, Hr = (o, i) => {
  const t = po[i];
  return t || (o.getAttribute("data-waves") !== null ? o : o.closest("[data-waves]") || null);
}, Br = (o) => {
  const i = o.target, t = i.getAttribute("data-waves-id") || "", s = Hr(i, t);
  if (!s || s.getAttribute("disabled"))
    return;
  const a = s.getAttribute("data-waves");
  let { clientX: h, clientY: c } = o;
  if (pi === "touch") {
    const Lt = o.touches[0];
    h = Lt.clientX, c = Lt.clientY;
  }
  const p = Pr(h, c, t, s), m = qr(p, a), { container: C, item: tt } = p;
  C.setAttribute("style", zr(s, tt)), C.appendChild(m);
}, Nr = () => {
  pi = ho();
  const o = `${pi}${pi === "touch" ? "start" : "down"}`;
  window.addEventListener(o, Br);
};
document.addEventListener("DOMContentLoaded", () => Nr());
const Wr = (o) => o.checkValidity() || o.validationMessage, Vr = (o, i) => {
  const t = document.createElement("div");
  t.axGenerated = !0, o.appendChild(t), t.classList.add("form-helper-invalid"), t.innerHTML = i;
}, Xr = (o) => {
  const i = o.querySelector(".form-helper-invalid");
  !i || i.axGenerated && i.remove();
}, jn = (o) => {
  o.classList.remove("form-valid", "form-invalid", "form-no-helper"), Xr(o);
}, Zn = (o, i) => {
  const t = o.getAttribute("data-form-validate");
  let s = !1;
  if (t) {
    const c = t.toLowerCase().split(",");
    if (s = c.includes("auto"), c.includes("lazy") && i === "input")
      return;
  }
  const a = Wr(o), h = o.closest(".form-field, .form-file");
  return jn(h), a !== !0 ? (s && typeof a == "string" ? Vr(h, a) : h.querySelector(".form-helper-invalid") || h.classList.add("form-no-helper"), h.classList.add("form-invalid"), !1) : (h.classList.add("form-valid"), h.querySelector(".form-helper-valid") || h.classList.add("form-no-helper"), !0);
}, Yr = (o) => {
  o.querySelectorAll("[data-form-validate]").forEach((t) => jn(t.closest(".form-field, .form-file")));
}, Fr = (o) => [...o.querySelectorAll("[data-form-validate]")].map((t) => Zn(t, "change")).every((t) => t);
let vo = !0;
const mi = (o) => {
  o.forEach(Jn);
}, Kn = (o) => {
  if (vo) {
    vo = !1;
    return;
  }
  setTimeout(() => {
    mi(o);
  }, 10);
}, Jn = (o) => {
  const i = o.closest(".form-field"), t = i.querySelector(".form-custom-select"), s = i.classList.contains("active"), a = ["date", "month", "week", "time"];
  let h = t && o.tagName === "DIV" && o.innerText.length > 0;
  t || (h = o.value.length > 0 || o.tagName !== "SELECT" && o.placeholder.length > 0 || o.tagName === "SELECT" || a.some((m) => o.matches(`[type="${m}"]`)));
  const c = document.activeElement === o, p = o.hasAttribute("disabled") || o.hasAttribute("readonly");
  o.firstInit ? (yo(o, s, h, c, i, t), o.firstInit = !1, o.isInit = !0) : p || yo(o, s, h, c, i, t);
}, yo = (o, i, t, s, a, h) => {
  const c = o.type === "textarea", p = a.querySelector("label:not(.form-check)");
  !i && (t || s) ? a.classList.add("active") : i && !(t || s) && a.classList.remove("active"), c ? p && (p.style.backgroundColor = Qn(p)) : Ur(o, a, h, p), s && !c ? a.classList.add("is-focused") : h || a.classList.remove("is-focused"), s && c ? a.classList.add("is-textarea-focused") : a.classList.remove("is-textarea-focused");
}, Ur = (o, i, t, s) => {
  const a = o.clientWidth, h = o.offsetLeft, c = o.clientHeight + (t ? t.offsetTop : o.offsetTop) + "px", p = o.closest(".form-material").classList.contains("form-material-bordered");
  i.style.setProperty(J("form-material-position"), c);
  let m = h, C = "left", tt = a + "px", Lt = 0;
  i.classList.contains("form-rtl") && (C = "right", m = i.clientWidth - a - h), i.style.setProperty(J(`form-material-${C}-offset`), m + "px"), m != 0 && (Lt = h), i.style.setProperty(J("form-material-width"), tt), s && (s.style.left = Lt + "px", p && (s.style.backgroundColor = Qn(s)));
}, go = (o) => {
  const i = window.getComputedStyle(o).backgroundColor;
  if (i && !["transparent", "rgba(0, 0, 0, 0)"].includes(i))
    return i;
}, Qn = (o) => {
  o.style.backgroundColor = "";
  let i = o;
  for (; i.parentElement; ) {
    const s = go(i);
    if (s)
      return s;
    i = i.parentElement;
  }
  const t = go(document.documentElement);
  return t || "white";
}, tr = (o, i) => {
  o.hasAttribute("data-form-validate") && Zn(o, i.type);
}, _r = (o, i) => {
  o.forEach((t) => {
    t === i.target && Jn(t);
  });
}, Gr = (o, i) => {
  i.target.tagName === "FORM" && i.target.classList.contains("form-material") && Kn(o);
}, jr = (o) => {
  o.forEach((h) => {
    h.firstInit = !0, h.validateRef = tr.bind(null, h), h.addEventListener("input", h.validateRef), h.addEventListener("change", h.validateRef);
  }), mi(o);
  const i = _r.bind(null, o);
  document.addEventListener("focus", i, !0), document.addEventListener("blur", i, !0);
  const t = Kn.bind(null, o);
  window.addEventListener("pageshow", t);
  const s = Gr.bind(null, o);
  document.addEventListener("reset", s);
  const a = mi.bind(null, o);
  window.addEventListener("resize", a);
}, Zr = (o, i) => {
  const t = o.files;
  t.length > 1 ? i.innerHTML = Array.from(t).map((s) => s.name).join(", ") : t[0] && (i.innerHTML = t[0].name);
}, Kr = (o) => {
  if (o.isInit)
    return;
  o.isInit = !0;
  const i = o.querySelector('input[type="file"]'), t = o.querySelector(".form-file-path");
  i.handleRef = Zr.bind(null, i, t), i.validateRef = tr.bind(null, i), i.addEventListener("change", i.handleRef), i.addEventListener("input", i.validateRef), i.addEventListener("change", i.validateRef);
}, Jr = () => {
  const o = Array.from(document.querySelectorAll(".form-file"));
  try {
    o.forEach(Kr);
  } catch (i) {
    console.error("[Axentix] Form file error", i);
  }
}, vi = (o = document.querySelectorAll(
  ".form-material .form-field:not(.form-default) .form-control:not(.form-custom-select)"
)) => {
  const { setupInputs: i, detectInputs: t } = Array.from(o).reduce(
    (s, a) => (a.isInit ? s.detectInputs.push(a) : s.setupInputs.push(a), s),
    { setupInputs: [], detectInputs: [] }
  );
  Jr();
  try {
    i.length > 0 && jr(i), t.length > 0 && mi(t);
  } catch (s) {
    console.error("[Axentix] Material forms error", s);
  }
};
document.addEventListener("DOMContentLoaded", () => vi());
const Qr = { updateInputs: vi, validate: Fr, resetValidation: Yr }, ta = {
  inputClasses: ""
};
var R, xt, L, qe, ct, $s, ir, qs, sr, si, oo, Ps, or, zs, nr, oi, no, Hs, rr;
class er extends z {
  constructor(t, s) {
    super();
    r(this, $s);
    r(this, qs);
    r(this, si);
    r(this, Ps);
    r(this, zs);
    r(this, oi);
    r(this, Hs);
    u(this, "options");
    r(this, R, void 0);
    r(this, xt, void 0);
    r(this, L, void 0);
    r(this, qe, void 0);
    r(this, ct, void 0);
    try {
      this.preventDbInstance(t), v.push({ type: "Select", instance: this }), this.el = document.querySelector(t), this.options = O("Select", s, this.el), this.setup();
    } catch (a) {
      console.error("[Axentix] Select init error", a);
    }
  }
  setup() {
    this.el.style.display = "none", n(this, xt, lo([this.el])), e(this, xt).className = "form-custom-select", l(this, $s, ir).call(this);
  }
  reset() {
    this.destroy(!0), super.reset();
  }
  destroy(t) {
    t || super.destroy(), e(this, R) && (e(this, R).el.removeEventListener("ax.dropdown.open", e(this, ct)), e(this, R).el.removeEventListener("ax.dropdown.close", e(this, ct)), n(this, ct, null), e(this, R).destroy(), e(this, R).el.remove(), n(this, R, null)), br(e(this, xt)), this.el.classList.add("form-custom-select"), this.el.style.display = "";
  }
}
R = new WeakMap(), xt = new WeakMap(), L = new WeakMap(), qe = new WeakMap(), ct = new WeakMap(), $s = new WeakSet(), ir = function() {
  const t = `dropdown-${co()}`;
  n(this, L, document.createElement("div")), e(this, L).className = `form-control ${this.options.inputClasses}`, e(this, L).dataset.target = t;
  const s = document.createElement("div"), a = this.el.className.replace("form-control", "");
  if (s.className = `dropdown-content ${a}`, this.el.disabled) {
    e(this, L).setAttribute("disabled", ""), e(this, xt).append(e(this, L)), l(this, si, oo).call(this, s);
    return;
  }
  n(this, ct, l(this, Ps, or).bind(this));
  const h = document.createElement("div");
  h.className = "dropdown", h.id = t, h.addEventListener("ax.dropdown.open", e(this, ct)), h.addEventListener("ax.dropdown.close", e(this, ct)), Array.from(this.el.attributes).forEach((m) => {
    m.name.startsWith("data-dropdown") && h.setAttribute(m.name, m.value);
  }), h.append(e(this, L)), h.append(s), e(this, xt).append(h), l(this, si, oo).call(this, s);
  const c = pe("Dropdown");
  n(this, R, new c(`#${t}`, {
    closeOnClick: !this.el.multiple,
    preventViewport: !0
  }));
  const p = window.getComputedStyle(h).zIndex;
  n(this, qe, this.el.closest(".form-field").querySelector("label:not(.form-check)")), e(this, qe) && (e(this, qe).style.zIndex = p + 5);
}, qs = new WeakSet(), sr = function(t, s) {
  const a = document.createElement("div");
  a.className = "form-field";
  const h = document.createElement("label");
  h.className = "form-check";
  const c = document.createElement("input");
  c.type = "checkbox", s && c.setAttribute("disabled", "");
  const p = document.createElement("span");
  return p.innerHTML = t, h.append(c, p), a.append(h), a;
}, si = new WeakSet(), oo = function(t) {
  for (const s of this.el.options) {
    const a = s.hasAttribute("disabled"), h = document.createElement("div");
    h.className = "dropdown-item", h.innerHTML = this.el.multiple ? l(this, qs, sr).call(this, s.text, a).innerHTML : s.text, h.axValue = s.value || s.text, a ? h.classList.add("form-disabled") : (h.axClickRef = l(this, zs, nr).bind(this, h), h.addEventListener("click", h.axClickRef)), (s.hasAttribute("selected") || !this.el.multiple && this.el.value === (s.value || s.text)) && l(this, oi, no).call(this, h), t.append(h);
  }
}, Ps = new WeakSet(), or = function() {
  e(this, L).closest(".form-field").classList.toggle("is-focused");
}, zs = new WeakSet(), nr = function(t, s) {
  s.preventDefault(), t.classList.contains("form-selected") ? l(this, Hs, rr).call(this, t) : l(this, oi, no).call(this, t);
}, oi = new WeakSet(), no = function(t) {
  const s = t.axValue;
  this.el.multiple ? t.querySelector("input").checked = !0 : e(this, R) && e(this, R).el.querySelectorAll(".dropdown-item").forEach((h) => h.classList.remove("form-selected")), t.classList.add("form-selected");
  const a = this.el.multiple ? [...e(this, L).innerText.split(", ").filter(Boolean), s].join(", ") : s;
  e(this, L).innerText = a, this.el.value = a, vi([e(this, L)]);
}, Hs = new WeakSet(), rr = function(t) {
  const s = t.axValue;
  t.classList.remove("form-selected");
  let a = "";
  if (this.el.multiple) {
    t.querySelector("input").checked = !1;
    const h = e(this, L).innerText.split(", ").filter(Boolean), c = h.findIndex((p) => p === s);
    h.splice(c, 1), a = h.join(", ");
  }
  e(this, L).innerText = a, this.el.value = a, vi([e(this, L)]);
}, u(er, "getDefaultOptions", () => ta);
M({
  class: er,
  name: "Select",
  dataDetection: !0,
  autoInit: {
    enabled: !0,
    selector: ".form-custom-select"
  }
});
let ze = "system", Et = "", Vs = !1;
const ea = () => {
  Vs = !0, ar();
}, ia = () => Vs = !1, yi = (o = "system") => {
  !Vs || (ze = o, o === "system" && (o = wr() ? "dark" : "light", localStorage.removeItem("ax-theme")), Et && document.documentElement.classList.remove(Et), Et = `theme-${o}`, document.documentElement.classList.add(Et), Qr.updateInputs(), d(document.documentElement, "theme.change", { theme: Et }), ze !== "system" && localStorage.setItem("ax-theme", Et));
}, ar = () => {
  const o = localStorage.getItem("ax-theme");
  yi(o ? o.replace("theme-", "") : ze);
}, sa = () => {
  window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", () => ze === "system" && yi("system")), ar();
};
document.addEventListener("DOMContentLoaded", sa);
const ya = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get themeMode() {
    return ze;
  },
  get theme() {
    return Et;
  },
  get enabled() {
    return Vs;
  },
  enable: ea,
  disable: ia,
  toggle: yi
}, Symbol.toStringTag, { value: "Module" }));
var Bs, lr, ni, ro, ri, ao;
class ga {
  constructor(i, t) {
    r(this, Bs);
    r(this, ni);
    r(this, ri);
    u(this, "component");
    u(this, "isAll");
    u(this, "options");
    this.component = i[0].toUpperCase() + i.slice(1).toLowerCase(), this.isAll = i === "all", this.options = this.isAll ? {} : t, l(this, Bs, lr).call(this);
  }
}
Bs = new WeakSet(), lr = function() {
  const i = pr();
  if (i.hasOwnProperty(this.component)) {
    const s = l(this, ni, ro).call(this, i[this.component]);
    l(this, ri, ao).call(this, s, this.component);
  } else
    this.isAll && Object.keys(i).forEach((s) => {
      const a = l(this, ni, ro).call(this, i[s]);
      a.length > 0 && l(this, ri, ao).call(this, a, s);
    });
}, ni = new WeakSet(), ro = function(i) {
  return Array.from(i).map((t) => "#" + t.id);
}, ri = new WeakSet(), ao = function(i, t) {
  i.forEach((s) => {
    const a = pe(t), h = [s, this.options];
    try {
      new a(...h);
    } catch (c) {
      console.error("[Axentix] Unable to load " + t, c);
    }
  });
};
const oa = (o) => {
  const i = o.currentTarget.getAttribute("data-close");
  if (!i)
    return console.error("[Axentix] A closable target must be set");
  const t = document.getElementById(i);
  t && t.remove();
}, na = () => {
  document.querySelectorAll("[data-close]").forEach((i) => i.addEventListener("click", oa));
};
document.addEventListener("DOMContentLoaded", na);
export {
  ga as Axentix,
  Eo as Caroulix,
  Ro as Collapsible,
  Wo as Dropdown,
  Uo as Fab,
  Qr as Forms,
  Jo as Lightbox,
  pn as Modal,
  Tn as ScrollSpy,
  er as Select,
  zo as Sidenav,
  mn as Tab,
  ya as Theme,
  di as Toast,
  Yn as Tooltip,
  Nr as Waves,
  Q as config,
  d as createEvent,
  wo as createOverlay,
  ma as destroy,
  va as destroyAll,
  ha as exportToWindow,
  ui as extend,
  ca as getAllInstances,
  pr as getAutoInitElements,
  ue as getClientXPosition,
  mo as getClientYPosition,
  pe as getComponentClass,
  O as getComponentOptions,
  J as getCssVar,
  bo as getDataElements,
  Ws as getInstance,
  Ns as getInstanceByType,
  ho as getPointerType,
  ai as getTriggers,
  co as getUid,
  v as instances,
  wr as isDarkMode,
  Lr as isPointerEnabled,
  xr as isTouchEnabled,
  M as registerComponent,
  la as registerPlugin,
  ua as reset,
  fa as resetAll,
  da as sync,
  pa as syncAll,
  br as unwrap,
  fi as updateOverlay,
  aa as version,
  lo as wrap
};
